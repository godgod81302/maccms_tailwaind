(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3551],{41992:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/configuration",function(){return a(25427)}])},25427:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return x}});var e=a(85893),t=a(11151),p=a(72788),o=a(36336),l=[{plugin:"preflight"},{plugin:"container"},{plugin:"accessibility",example:"sr-only"},{plugin:"pointerEvents",example:"pointer-events-none"},{plugin:"visibility",example:"invisible"},{plugin:"position",example:"absolute"},{plugin:"inset",example:"end-44"},{plugin:"isolation",example:"isolate"},{plugin:"zIndex",example:"z-30"},{plugin:"order",example:"order-8"},{plugin:"gridColumn",example:"col-span-6"},{plugin:"gridColumnStart",example:"col-start-7"},{plugin:"gridColumnEnd",example:"col-end-7"},{plugin:"gridRow",example:"row-span-6"},{plugin:"gridRowStart",example:"row-start-7"},{plugin:"gridRowEnd",example:"row-end-7"},{plugin:"float",example:"float-right"},{plugin:"clear",example:"clear-left"},{plugin:"margin",example:"me-28"},{plugin:"boxSizing",example:"box-border"},{plugin:"lineClamp",example:"line-clamp-4"},{plugin:"display",example:"table-column-group"},{plugin:"aspectRatio",example:"aspect-square"},{plugin:"size",example:"size-0.5"},{plugin:"height",example:"h-96"},{plugin:"maxHeight",example:"max-h-44"},{plugin:"minHeight",example:"min-h-44"},{plugin:"width",example:"w-2.5"},{plugin:"minWidth",example:"min-w-36"},{plugin:"maxWidth",example:"max-w-80"},{plugin:"flex",example:"flex-auto"},{plugin:"flexShrink",example:"flex-shrink"},{plugin:"flexGrow",example:"flex-grow"},{plugin:"flexBasis",example:"basis-px"},{plugin:"tableLayout",example:"table-auto"},{plugin:"captionSide",example:"caption-top"},{plugin:"borderCollapse",example:"border-collapse"},{plugin:"borderSpacing",example:"border-spacing-x-28"},{plugin:"transformOrigin",example:"origin-bottom-right"},{plugin:"translate",example:"translate-x-full"},{plugin:"rotate",example:"rotate-6"},{plugin:"skew",example:"skew-x-12"},{plugin:"scale",example:"scale-x-95"},{plugin:"transform",example:"transform-cpu"},{plugin:"animation",example:"animate-ping"},{plugin:"cursor",example:"cursor-grab"},{plugin:"touchAction",example:"touch-pan-right"},{plugin:"userSelect",example:"select-text"},{plugin:"resize",example:"resize-y"},{plugin:"scrollSnapType",example:"snap-y"},{plugin:"scrollSnapAlign",example:"snap-end"},{plugin:"scrollSnapStop",example:"snap-normal"},{plugin:"scrollMargin",example:"scroll-me-28"},{plugin:"scrollPadding",example:"scroll-pe-28"},{plugin:"listStylePosition",example:"list-inside"},{plugin:"listStyleType",example:"list-disc"},{plugin:"listStyleImage",example:"list-image-none"},{plugin:"appearance",example:"appearance-none"},{plugin:"columns",example:"columns-auto"},{plugin:"breakBefore",example:"break-before-avoid-page"},{plugin:"breakInside",example:"break-inside-avoid"},{plugin:"breakAfter",example:"break-after-avoid-page"},{plugin:"gridAutoColumns",example:"auto-cols-min"},{plugin:"gridAutoFlow",example:"grid-flow-dense"},{plugin:"gridAutoRows",example:"auto-rows-min"},{plugin:"gridTemplateColumns",example:"grid-cols-7"},{plugin:"gridTemplateRows",example:"grid-rows-7"},{plugin:"flexDirection",example:"flex-row-reverse"},{plugin:"flexWrap",example:"flex-wrap-reverse"},{plugin:"placeContent",example:"place-content-between"},{plugin:"placeItems",example:"place-items-center"},{plugin:"alignContent",example:"content-between"},{plugin:"alignItems",example:"items-center"},{plugin:"justifyContent",example:"justify-center"},{plugin:"justifyItems",example:"justify-items-end"},{plugin:"gap",example:"gap-x-28"},{plugin:"space",example:"space-y-0"},{plugin:"divideWidth",example:"divide-y-0"},{plugin:"divideStyle",example:"divide-dotted"},{plugin:"divideColor",example:"divide-green-800"},{plugin:"divideOpacity",example:"divide-opacity-50"},{plugin:"placeSelf",example:"place-self-end"},{plugin:"alignSelf",example:"self-end"},{plugin:"justifySelf",example:"justify-self-end"},{plugin:"overflow",example:"overflow-x-hidden"},{plugin:"overscrollBehavior",example:"overscroll-y-contain"},{plugin:"scrollBehavior",example:"scroll-auto"},{plugin:"textOverflow",example:"overflow-ellipsis"},{plugin:"hyphens",example:"hyphens-manual"},{plugin:"whitespace",example:"whitespace-pre"},{plugin:"textWrap",example:"text-nowrap"},{plugin:"wordBreak",example:"break-words"},{plugin:"borderRadius",example:"rounded-ss-lg"},{plugin:"borderWidth",example:"border-e-4"},{plugin:"borderStyle",example:"border-dotted"},{plugin:"borderColor",example:"border-e-green-800"},{plugin:"borderOpacity",example:"border-opacity-50"},{plugin:"backgroundColor",example:"bg-green-800"},{plugin:"backgroundOpacity",example:"bg-opacity-50"},{plugin:"backgroundImage",example:"bg-gradient-to-br"},{plugin:"gradientColorStops",example:"via-emerald-700"},{plugin:"boxDecorationBreak",example:"decoration-clone"},{plugin:"backgroundSize",example:"bg-cover"},{plugin:"backgroundAttachment",example:"bg-local"},{plugin:"backgroundClip",example:"bg-clip-padding"},{plugin:"backgroundPosition",example:"bg-left-top"},{plugin:"backgroundRepeat",example:"bg-repeat-x"},{plugin:"backgroundOrigin",example:"bg-origin-padding"},{plugin:"fill",example:"fill-green-700"},{plugin:"stroke",example:"stroke-green-700"},{plugin:"strokeWidth",example:"stroke-1"},{plugin:"objectFit",example:"object-fill"},{plugin:"objectPosition",example:"object-left-top"},{plugin:"padding",example:"pe-28"},{plugin:"textAlign",example:"text-right"},{plugin:"textIndent",example:"indent-28"},{plugin:"verticalAlign",example:"align-bottom"},{plugin:"fontFamily",example:"font-serif"},{plugin:"fontSize",example:"text-3xl"},{plugin:"fontWeight",example:"font-medium"},{plugin:"textTransform",example:"lowercase"},{plugin:"fontStyle",example:"italic"},{plugin:"fontVariantNumeric",example:"oldstyle-nums"},{plugin:"lineHeight",example:"leading-9"},{plugin:"letterSpacing",example:"tracking-normal"},{plugin:"textColor",example:"text-green-800"},{plugin:"textOpacity",example:"text-opacity-50"},{plugin:"textDecoration",example:"overline"},{plugin:"textDecorationColor",example:"decoration-green-800"},{plugin:"textDecorationStyle",example:"decoration-dotted"},{plugin:"textDecorationThickness",example:"decoration-4"},{plugin:"textUnderlineOffset",example:"underline-offset-2"},{plugin:"fontSmoothing",example:"antialiased"},{plugin:"placeholderColor",example:"placeholder-green-800"},{plugin:"placeholderOpacity",example:"placeholder-opacity-50"},{plugin:"caretColor",example:"caret-green-800"},{plugin:"accentColor",example:"accent-green-800"},{plugin:"opacity",example:"opacity-50"},{plugin:"backgroundBlendMode",example:"bg-blend-color-burn"},{plugin:"mixBlendMode",example:"mix-blend-hard-light"},{plugin:"boxShadow",example:"shadow-lg"},{plugin:"boxShadowColor",example:"shadow-green-800"},{plugin:"outlineStyle",example:"outline-dashed"},{plugin:"outlineWidth",example:"outline-2"},{plugin:"outlineOffset",example:"outline-offset-2"},{plugin:"outlineColor",example:"outline-green-800"},{plugin:"ringWidth",example:"ring-4"},{plugin:"ringColor",example:"ring-green-800"},{plugin:"ringOpacity",example:"ring-opacity-50"},{plugin:"ringOffsetWidth",example:"ring-offset-2"},{plugin:"ringOffsetColor",example:"ring-offset-green-800"},{plugin:"blur",example:"blur-md"},{plugin:"brightness",example:"brightness-100"},{plugin:"contrast",example:"contrast-100"},{plugin:"dropShadow",example:"drop-shadow-lg"},{plugin:"grayscale",example:"grayscale-0"},{plugin:"hueRotate",example:"hue-rotate-30"},{plugin:"invert",example:"invert-0"},{plugin:"saturate",example:"saturate-100"},{plugin:"sepia",example:"sepia-0"},{plugin:"filter",example:"filter"},{plugin:"backdropBlur",example:"backdrop-blur-md"},{plugin:"backdropBrightness",example:"backdrop-brightness-100"},{plugin:"backdropContrast",example:"backdrop-contrast-100"},{plugin:"backdropGrayscale",example:"backdrop-grayscale-0"},{plugin:"backdropHueRotate",example:"backdrop-hue-rotate-30"},{plugin:"backdropInvert",example:"backdrop-invert-0"},{plugin:"backdropOpacity",example:"backdrop-opacity-50"},{plugin:"backdropSaturate",example:"backdrop-saturate-100"},{plugin:"backdropSepia",example:"backdrop-sepia-0"},{plugin:"backdropFilter",example:"backdrop-filter"},{plugin:"transitionProperty",example:"transition-colors"},{plugin:"transitionDelay",example:"delay-200"},{plugin:"transitionDuration",example:"duration-200"},{plugin:"transitionTimingFunction",example:"ease-in"},{plugin:"willChange",example:"will-change-scroll"},{plugin:"content",example:"content-none"},{plugin:"forcedColorAdjust",example:"forced-color-adjust-auto"}];let c={preflight:"Tailwind's base/reset styles",container:"The `container` component",accessibility:"The `sr-only` and `not-sr-only` utilities",backgroundOpacity:"The `background-color` opacity utilities like `bg-opacity-25`",borderOpacity:"The `border-color` opacity utilities like `border-opacity-25`",divideColor:"The between elements `border-color` utilities like `divide-slate-500`",divideWidth:"The between elements `border-width` utilities like `divide-x-2`",placeholderColor:"The placeholder `color` utilities like `placeholder-red-600`",placeholderOpacity:"The placeholder `color` opacity utilities like `placeholder-opacity-25`",space:'The "space-between" utilities like `space-x-4`',transform:"The `transform` utility (for enabling transform features)"};function i(){return(0,e.jsx)("div",{className:"prose prose-slate dark:prose-dark",children:(0,e.jsxs)("table",{children:[(0,e.jsx)("thead",{children:(0,e.jsxs)("tr",{children:[(0,e.jsx)("th",{children:"核心插件"}),(0,e.jsx)("th",{children:"描述"})]})}),(0,e.jsx)("tbody",{children:l.sort(({plugin:n},{plugin:s})=>n<s?-1:1).map(({plugin:n,example:s})=>{var a;return(0,e.jsxs)("tr",{children:[(0,e.jsx)("td",{children:(0,e.jsx)("code",{children:n})}),(0,e.jsx)("td",{children:(null===(a=c[n])||void 0===a?void 0:a.split(/`([^`]+)`/).map((n,s)=>s%2==0?n:(0,e.jsx)("code",{children:n},s)))||(0,e.jsxs)(e.Fragment,{children:["The"," ",(0,e.jsx)("code",{children:n.replace(/([a-z])([A-Z])/g,(n,s,a)=>`${s}-${a.toLowerCase()}`)})," ","utilities like ",(0,e.jsx)("code",{children:s})]})})]},n)})})]})})}var r=a(64637);let u=p.L,d=o.X_;function k(n){let s=Object.assign({p:"p",code:"code",a:"a",hr:"hr",pre:"pre",em:"em",strong:"strong"},(0,t.ah)(),n.components),{Editor:a,Heading:p}=s;return a||h("Editor",!0),p||h("Heading",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(s.p,{children:"因为 Tailwind 是一个用于构建定制用户界面的框架，所以它在设计之初就考虑到了定制。"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Because Tailwind is a framework for building bespoke user interfaces, it has been designed from the ground up with customization in mind."}),"\n",(0,e.jsxs)(s.p,{children:["默认情况下，Tailwind 将在项目的根目录中查找可选的 ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," 文件，你可以在其中定义任何自定义项。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5By default, Tailwind will look for an optional ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," file at the root of your project where you can define any customizations."]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./src/**/*.{html,js}\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'blue\'</span><span class="token operator">:</span> <span class="token string">\'#1fb6ff\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'purple\'</span><span class="token operator">:</span> <span class="token string">\'#7e5bef\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'pink\'</span><span class="token operator">:</span> <span class="token string">\'#ff49db\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'orange\'</span><span class="token operator">:</span> <span class="token string">\'#ff7849\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'green\'</span><span class="token operator">:</span> <span class="token string">\'#13ce66\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'yellow\'</span><span class="token operator">:</span> <span class="token string">\'#ffc82c\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'gray-dark\'</span><span class="token operator">:</span> <span class="token string">\'#273444\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'gray\'</span><span class="token operator">:</span> <span class="token string">\'#8492a6\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'gray-light\'</span><span class="token operator">:</span> <span class="token string">\'#d3dce6\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">fontFamily</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">sans</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'Graphik\'</span><span class="token punctuation">,</span> <span class="token string">\'sans-serif\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">serif</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'Merriweather\'</span><span class="token punctuation">,</span> <span class="token string">\'serif\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">spacing</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'8xl\'</span><span class="token operator">:</span> <span class="token string">\'96rem\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'9xl\'</span><span class="token operator">:</span> <span class="token string">\'128rem\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'4xl\'</span><span class="token operator">:</span> <span class="token string">\'2rem\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["配置文件的每个部分都是可选的，因此你只需指定要更改的内容。任何缺失的部分都将回退到 Tailwind 的 ",(0,e.jsx)(s.a,{href:"https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/config.full.js",children:"默认配置"}),"。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Every section of the config file is optional, so you only have to specify what you’d like to change. Any missing sections will fall back to Tailwind’s ",(0,e.jsx)(s.a,{href:"https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/config.full.js",children:"default configuration"}),"."]}),"\n",(0,e.jsx)(s.hr,{}),"\n",(0,e.jsx)("a",{id:"creating-your-configuration-file"}),"\n",(0,e.jsx)(p,{level:2,id:"",children:"创建配置文件"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Creating your configuration file"}),"\n",(0,e.jsxs)(s.p,{children:["使用安装 ",(0,e.jsx)(s.code,{children:"tailwindcss"})," npm 包时包含的 Tailwind CLI 工具为你的项目生成 Tailwind 配置文件："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Generate a Tailwind config file for your project using the Tailwind CLI utility included when you install the ",(0,e.jsx)(s.code,{children:"tailwindcss"})," npm package:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-shell",dangerouslySetInnerHTML:{__html:'<code class="language-shell">npx tailwindcss init</code>'}}),"\n",(0,e.jsxs)(s.p,{children:["这将在项目的根目录下创建一个最小的 ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," 文件："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5This will create a minimal ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," file at the root of your project:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)("a",{id:"using-a-different-file-name"}),"\n",(0,e.jsx)(p,{level:3,id:"-1",children:"使用不同的文件名"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Using a different file name"}),"\n",(0,e.jsxs)(s.p,{children:["要使用 ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," 以外的名称，请将其作为参数传递到命令行："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5To use a name other than ",(0,e.jsx)(s.code,{children:"tailwind.config.js"}),", pass it as an argument on the command-line:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-shell",dangerouslySetInnerHTML:{__html:'<code class="language-shell">npx tailwindcss init tailwindcss-config.js</code>'}}),"\n",(0,e.jsx)(s.p,{children:"当你使用自定义文件名时，你需要在使用 Tailwind CLI 工具编译 CSS 时将其指定为命令行参数："}),"\n",(0,e.jsx)(s.p,{children:"\xa5When you use a custom file name, you will need to specify it as a command-line argument when compiling your CSS with the Tailwind CLI tool:"}),"\n",(0,e.jsx)(s.pre,{className:"language-shell",dangerouslySetInnerHTML:{__html:'<code class="language-shell">npx tailwindcss <span class="token parameter variable">-c</span> ./tailwindcss-config.js <span class="token parameter variable">-i</span> input.css <span class="token parameter variable">-o</span> output.css</code>'}}),"\n",(0,e.jsx)(s.p,{children:"如果你将 Tailwind 用作 PostCSS 插件，则需要在 PostCSS 配置中指定自定义配置路径："}),"\n",(0,e.jsx)(s.p,{children:"\xa5If you’re using Tailwind as a PostCSS plugin, you will need to specify your custom configuration path in your PostCSS configuration:"}),"\n",(0,e.jsx)(a,{filename:"postcss.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">tailwindcss</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token string">\'./tailwindcss-config.js\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["或者，你可以使用 ",(0,e.jsx)(s.code,{children:"@config"})," 指令指定你的自定义配置路径："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Alternatively, you can specify your custom configuration path using the ",(0,e.jsx)(s.code,{children:"@config"})," directive:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwindcss-config.js"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["在 ",(0,e.jsx)(s.a,{href:"/docs/functions-and-directives#config",children:"函数和指令"})," 文档中了解有关 ",(0,e.jsx)(s.code,{children:"@config"})," 指令的更多信息。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Learn more about the ",(0,e.jsx)(s.code,{children:"@config"})," directive in the ",(0,e.jsx)(s.a,{href:"/docs/functions-and-directives#config",children:"Functions & Directives"})," documentation."]}),"\n",(0,e.jsx)("a",{id:"using-esm-or-typescript"}),"\n",(0,e.jsx)(p,{level:3,id:"esm-type-script",children:"使用 ESM 或 TypeScript"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Using ESM or TypeScript"}),"\n",(0,e.jsx)(s.p,{children:"你还可以在 ESM 甚至 TypeScript 中配置 Tailwind CSS："}),"\n",(0,e.jsx)(s.p,{children:"\xa5You can also configure Tailwind CSS in ESM or even TypeScript:"}),"\n",(0,e.jsxs)(r.E,{children:[(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\n<span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre>'}),(0,e.jsx)(a,{filename:"tailwind.config.ts",code:'<pre class="language-js"><code class="language-js"><span class="token keyword module">import</span> type <span class="token punctuation">{</span> <span class="token maybe-class-name">Config</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'tailwindcss\'</span>\n\n<span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span> satisfies <span class="token maybe-class-name">Config</span></code></pre>'})]}),"\n",(0,e.jsxs)(s.p,{children:["当你运行 ",(0,e.jsx)(s.code,{children:"npx tailwindcss init"})," 时，我们将检测你的项目是否是 ES 模块，并使用正确的语法自动生成你的配置文件。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5When you run ",(0,e.jsx)(s.code,{children:"npx tailwindcss init"}),", we’ll detect if your project is an ES Module and automatically generate your config file with the right syntax."]}),"\n",(0,e.jsxs)(s.p,{children:["你还可以使用 ",(0,e.jsx)(s.code,{children:"--esm"})," 标志显式生成 ESM 配置文件："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5You can also generate an ESM config file explicitly by using the ",(0,e.jsx)(s.code,{children:"--esm"})," flag:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-sh",dangerouslySetInnerHTML:{__html:'<code class="language-sh">npx tailwindcss init <span class="token parameter variable">--esm</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["要生成 TypeScript 配置文件，请使用 ",(0,e.jsx)(s.code,{children:"--ts"})," 标志："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5To generate a TypeScript config file, use the ",(0,e.jsx)(s.code,{children:"--ts"})," flag:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-sh",dangerouslySetInnerHTML:{__html:'<code class="language-sh">npx tailwindcss init <span class="token parameter variable">--ts</span></code>'}}),"\n",(0,e.jsx)("a",{id:"generating-a-postcss-configuration-file"}),"\n",(0,e.jsx)(p,{level:3,id:"post-css",children:"生成 PostCSS 配置文件"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Generating a PostCSS configuration file"}),"\n",(0,e.jsxs)(s.p,{children:["如果你还想在 ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," 文件旁边生成一个基本的 ",(0,e.jsx)(s.code,{children:"postcss.config.js"})," 文件，请使用 ",(0,e.jsx)(s.code,{children:"-p"})," 标志："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Use the ",(0,e.jsx)(s.code,{children:"-p"})," flag if you’d like to also generate a basic ",(0,e.jsx)(s.code,{children:"postcss.config.js"})," file alongside your ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," file:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-shell",dangerouslySetInnerHTML:{__html:'<code class="language-shell">npx tailwindcss init <span class="token parameter variable">-p</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["这将在你的项目中生成一个 ",(0,e.jsx)(s.code,{children:"postcss.config.js"})," 文件，如下所示："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5This will generate a ",(0,e.jsx)(s.code,{children:"postcss.config.js"})," file in your project that looks like this:"]}),"\n",(0,e.jsx)(a,{filename:"postcss.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">tailwindcss</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">autoprefixer</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)("a",{id:"scaffolding-the-entire-default-configuration"}),"\n",(0,e.jsx)(p,{level:3,id:"-2",children:"脚手架整个默认配置"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Scaffolding the entire default configuration"}),"\n",(0,e.jsx)(s.p,{children:"对于大多数用户，我们鼓励你将配置文件保持尽可能小，并且只指定你想要自定义的内容。"}),"\n",(0,e.jsx)(s.p,{children:"\xa5For most users we encourage you to keep your config file as minimal as possible, and only specify the things you want to customize."}),"\n",(0,e.jsxs)(s.p,{children:["如果你更愿意构建包含所有 Tailwind 默认配置的完整配置文件，请使用 ",(0,e.jsx)(s.code,{children:"--full"})," 选项："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5If you’d rather scaffold a complete configuration file that includes all of Tailwind’s default configuration, use the ",(0,e.jsx)(s.code,{children:"--full"})," option:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-shell",dangerouslySetInnerHTML:{__html:'<code class="language-shell">npx tailwindcss init <span class="token parameter variable">--full</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["你将获得一个与内部使用的 ",(0,e.jsx)(s.a,{href:"https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/config.full.js",children:"默认配置文件"})," Tailwind 相匹配的文件。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5You’ll get a file that matches the ",(0,e.jsx)(s.a,{href:"https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/config.full.js",children:"default configuration file"})," Tailwind uses internally."]}),"\n",(0,e.jsx)(s.hr,{}),"\n",(0,e.jsx)("a",{id:"configuration-options"}),"\n",(0,e.jsx)(p,{level:2,id:"-3",children:"配置选项"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Configuration options"}),"\n",(0,e.jsx)("a",{id:"content"}),"\n",(0,e.jsx)(p,{level:3,id:"-4",children:"内容"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Content"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"content"})," 部分是你配置所有 HTML 模板、JS 组件和任何其他包含 Tailwind 类名称的文件的路径的地方。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"content"})," section is where you configure the paths to all of your HTML templates, JS components, and any other files that contain Tailwind class names."]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">\'./pages/**/*.{html,js}\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'./components/**/*.{html,js}\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["在 ",(0,e.jsx)(s.a,{href:"/docs/content-configuration",children:"内容配置"})," 文档中了解有关配置内容源的更多信息。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Learn more about configuring your content sources in the ",(0,e.jsx)(s.a,{href:"/docs/content-configuration",children:"Content Configuration"})," documentation."]}),"\n",(0,e.jsx)("a",{id:"theme"}),"\n",(0,e.jsx)(p,{level:3,id:"-5",children:"主题"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Theme"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"theme"})," 部分是你定义调色板、字体、字体比例、边框大小、断点 - 与站点视觉设计相关的任何内容的地方。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"theme"})," section is where you define your color palette, fonts, type scale, border sizes, breakpoints — anything related to the visual design of your site."]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'blue\'</span><span class="token operator">:</span> <span class="token string">\'#1fb6ff\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'purple\'</span><span class="token operator">:</span> <span class="token string">\'#7e5bef\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'pink\'</span><span class="token operator">:</span> <span class="token string">\'#ff49db\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'orange\'</span><span class="token operator">:</span> <span class="token string">\'#ff7849\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'green\'</span><span class="token operator">:</span> <span class="token string">\'#13ce66\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'yellow\'</span><span class="token operator">:</span> <span class="token string">\'#ffc82c\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'gray-dark\'</span><span class="token operator">:</span> <span class="token string">\'#273444\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'gray\'</span><span class="token operator">:</span> <span class="token string">\'#8492a6\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'gray-light\'</span><span class="token operator">:</span> <span class="token string">\'#d3dce6\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">fontFamily</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">sans</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'Graphik\'</span><span class="token punctuation">,</span> <span class="token string">\'sans-serif\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">serif</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'Merriweather\'</span><span class="token punctuation">,</span> <span class="token string">\'serif\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">spacing</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'8xl\'</span><span class="token operator">:</span> <span class="token string">\'96rem\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'9xl\'</span><span class="token operator">:</span> <span class="token string">\'128rem\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'4xl\'</span><span class="token operator">:</span> <span class="token string">\'2rem\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["在 ",(0,e.jsx)(s.a,{href:"/docs/theme",children:"主题配置指南"})," 中了解有关默认主题以及如何对其进行自定义的更多信息。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Learn more about the default theme and how to customize it in the ",(0,e.jsx)(s.a,{href:"/docs/theme",children:"theme configuration guide"}),"."]}),"\n",(0,e.jsx)("a",{id:"plugins"}),"\n",(0,e.jsx)(p,{level:3,id:"-6",children:"插件"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Plugins"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"plugins"})," 部分允许你向 Tailwind 注册插件，这些插件可用于生成额外的工具、组件、基本样式或自定义变体。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"plugins"})," section allows you to register plugins with Tailwind that can be used to generate extra utilities, components, base styles, or custom variants."]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@tailwindcss/forms\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@tailwindcss/aspect-ratio\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@tailwindcss/typography\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss-children\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["了解有关在 ",(0,e.jsx)(s.a,{href:"/docs/plugins",children:"插件制作指南"})," 中编写自己的插件的更多信息。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Learn more about writing your own plugins in the ",(0,e.jsx)(s.a,{href:"/docs/plugins",children:"plugin authoring guide"}),"."]}),"\n",(0,e.jsx)("a",{id:"presets"}),"\n",(0,e.jsx)(p,{level:3,id:"-7",children:"预设"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Presets"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"presets"})," 部分允许你指定自己的自定义基本配置，而不是使用 Tailwind 的默认基本配置。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"presets"})," section allows you to specify your own custom base configuration instead of using Tailwind’s default base configuration."]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'@acmecorp/base-tailwind-config\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// Project-specific customizations</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["详细了解 ",(0,e.jsx)(s.a,{href:"/docs/presets",children:"预设文档"})," 中的预设。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Learn more about presets in the ",(0,e.jsx)(s.a,{href:"/docs/presets",children:"presets documentation"}),"."]}),"\n",(0,e.jsx)("a",{id:"prefix"}),"\n",(0,e.jsx)(p,{level:3,id:"-8",children:"前缀"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Prefix"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"prefix"})," 选项允许你为所有 Tailwind 生成的工具类添加自定义前缀。当在可能存在命名冲突的现有 CSS 之上分层 Tailwind 时，这非常有用。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"prefix"})," option allows you to add a custom prefix to all of Tailwind’s generated utility classes. This can be really useful when layering Tailwind on top of existing CSS where there might be naming conflicts."]}),"\n",(0,e.jsxs)(s.p,{children:["例如，你可以通过像这样设置 ",(0,e.jsx)(s.code,{children:"prefix"})," 选项来添加 ",(0,e.jsx)(s.code,{children:"tw-"})," 前缀："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5For example, you could add a ",(0,e.jsx)(s.code,{children:"tw-"})," prefix by setting the ",(0,e.jsx)(s.code,{children:"prefix"})," option like so:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">\'tw-\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"现在每个类都将使用配置的前缀生成："}),"\n",(0,e.jsx)(s.p,{children:"\xa5Now every class will be generated with the configured prefix:"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.tw-text-left</span></span> <span class="token punctuation">{</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.tw-text-center</span></span> <span class="token punctuation">{</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.tw-text-right</span></span> <span class="token punctuation">{</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* etc. */</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["重要的是要了解此前缀添加在任何变体修饰符之后。这意味着具有响应式或状态修饰符（如 ",(0,e.jsx)(s.code,{children:"sm:"})," 或 ",(0,e.jsx)(s.code,{children:"hover:"}),"）的类仍将首先具有响应式或状态修饰符，你的自定义前缀出现在冒号之后："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5It’s important to understand that this prefix is added ",(0,e.jsx)(s.em,{children:"after"})," any variant modifiers. That means that classes with responsive or state modifiers like ",(0,e.jsx)(s.code,{children:"sm:"})," or ",(0,e.jsx)(s.code,{children:"hover:"})," will still have the responsive or state modifier ",(0,e.jsx)(s.em,{children:"first"}),", with your custom prefix appearing after the colon:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tw-text-lg md:tw-text-xl tw-bg-red-500 <span class="code-highlight bg-code-highlight">hover:tw-bg-blue-500</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["负值的破折号修饰符应添加在你的前缀之前，因此如果你将 ",(0,e.jsx)(s.code,{children:"tw-"})," 配置为前缀，则 ",(0,e.jsx)(s.code,{children:"-mt-8"})," 将变为 ",(0,e.jsx)(s.code,{children:"-tw-mt-8"}),"："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The dash modifier for negative values should be added before your prefix, so ",(0,e.jsx)(s.code,{children:"-mt-8"})," would become ",(0,e.jsx)(s.code,{children:"-tw-mt-8"})," if you’ve configured ",(0,e.jsx)(s.code,{children:"tw-"})," as your prefix:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-tw-mt-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,e.jsx)(s.p,{children:"前缀仅添加到 Tailwind 生成的类中；你自己的自定义类不会添加任何前缀。"}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Prefixes are only added to classes generated by Tailwind; ",(0,e.jsx)(s.strong,{children:"no prefix will be added to your own custom classes."})]}),"\n",(0,e.jsx)(s.p,{children:"这意味着如果你像这样添加自己的自定义工具："}),"\n",(0,e.jsx)(s.p,{children:"\xa5That means if you add your own custom utility like this:"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@layer</span> utilities</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.bg-brand-gradient</span></span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(s.p,{children:"…生成的变体不会有你配置的前缀："}),"\n",(0,e.jsx)(s.p,{children:"\xa5…the generated variants will not have your configured prefix:"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.bg-brand-gradient</span></span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.hover</span><span class="token punctuation">\\</span><span class="token class">:bg-brand-gradient</span><span class="token pseudo-class">:hover</span></span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(s.p,{children:"如果你也想为自己的工具添加前缀，只需将前缀添加到类定义中："}),"\n",(0,e.jsx)(s.p,{children:"\xa5If you’d like to prefix your own utilities as well, just add the prefix to the class definition:"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@layer</span> utilities</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.tw-bg-brand-gradient</span></span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)("a",{id:"important"}),"\n",(0,e.jsx)(p,{level:3,id:"-9",children:"重要"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Important"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"important"})," 选项可让你控制 Tailwind 的工具是否应标记为 ",(0,e.jsx)(s.code,{children:"!important"}),"。这在将 Tailwind 与具有高特异性选择器的现有 CSS 结合使用时非常有用。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"important"})," option lets you control whether or not Tailwind’s utilities should be marked with ",(0,e.jsx)(s.code,{children:"!important"}),". This can be really useful when using Tailwind with existing CSS that has high specificity selectors."]}),"\n",(0,e.jsxs)(s.p,{children:["要将工具生成为 ",(0,e.jsx)(s.code,{children:"!important"}),"，请将配置选项中的 ",(0,e.jsx)(s.code,{children:"important"})," 键设置为 ",(0,e.jsx)(s.code,{children:"true"}),"："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5To generate utilities as ",(0,e.jsx)(s.code,{children:"!important"}),", set the ",(0,e.jsx)(s.code,{children:"important"})," key in your configuration options to ",(0,e.jsx)(s.code,{children:"true"}),":"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">important</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["现在，所有 Tailwind 的工具类都将生成为 ",(0,e.jsx)(s.code,{children:"!important"}),"："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Now all of Tailwind’s utility classes will be generated as ",(0,e.jsx)(s.code,{children:"!important"}),":"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.leading-none</span></span> <span class="token punctuation">{</span>\n  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.leading-tight</span></span> <span class="token punctuation">{</span>\n  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.25</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.leading-snug</span></span> <span class="token punctuation">{</span>\n  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.375</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* etc. */</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["这也适用于你使用 ",(0,e.jsx)(s.code,{children:"@layer utilities"})," 指令在 CSS 中定义的任何自定义工具："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5This also applies to any custom utilities you define in your CSS using the ",(0,e.jsx)(s.code,{children:"@layer utilities"})," directive:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token comment">/* Input */</span>\n<span class="token atrule"><span class="token rule">@layer</span> utilities</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.bg-brand-gradient</span></span> <span class="token punctuation">{</span>\n    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token hexcode color">#3490dc</span><span class="token punctuation">,</span> <span class="token hexcode color">#6574cd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* Output */</span>\n<span class="token selector"><span class="token class">.bg-brand-gradient</span></span> <span class="token punctuation">{</span>\n  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token hexcode color">#3490dc</span><span class="token punctuation">,</span> <span class="token hexcode color">#6574cd</span><span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)("a",{id:"selector-strategy"}),"\n",(0,e.jsx)(p,{level:4,id:"-10",children:"选择器策略"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Selector strategy"}),"\n",(0,e.jsxs)(s.p,{children:["在合并向元素添加内联样式的第三方 JS 库时，将 ",(0,e.jsx)(s.code,{children:"important"})," 设置为 ",(0,e.jsx)(s.code,{children:"true"})," 可能会引入一些问题。在这些情况下，Tailwind 的 ",(0,e.jsx)(s.code,{children:"!important"})," 工具会破坏内联样式，这可能会破坏你的预期设计。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Setting ",(0,e.jsx)(s.code,{children:"important"})," to ",(0,e.jsx)(s.code,{children:"true"})," can introduce some issues when incorporating third-party JS libraries that add inline styles to your elements. In those cases, Tailwind’s ",(0,e.jsx)(s.code,{children:"!important"})," utilities defeat the inline styles, which can break your intended design."]}),"\n",(0,e.jsxs)(s.p,{children:["为了解决这个问题，你可以将 ",(0,e.jsx)(s.code,{children:"important"})," 设置为像 ",(0,e.jsx)(s.code,{children:"#app"})," 这样的 ID 选择器："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5To get around this, you can set ",(0,e.jsx)(s.code,{children:"important"})," to an ID selector like ",(0,e.jsx)(s.code,{children:"#app"})," instead:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">important</span><span class="token operator">:</span> <span class="token string">\'#app\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["此配置将为你的所有工具添加给定选择器的前缀，有效地增加它们的特异性，而实际上不会使它们成为 ",(0,e.jsx)(s.code,{children:"!important"}),"。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5This configuration will prefix all of your utilities with the given selector, effectively increasing their specificity without actually making them ",(0,e.jsx)(s.code,{children:"!important"}),"."]}),"\n",(0,e.jsxs)(s.p,{children:["指定 ",(0,e.jsx)(s.code,{children:"important"})," 选择器后，你需要确保站点的根元素与其匹配。使用上面的示例，我们需要将根元素的 ",(0,e.jsx)(s.code,{children:"id"})," 属性设置为 ",(0,e.jsx)(s.code,{children:"app"}),"，以便样式正常工作。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5After you specify the ",(0,e.jsx)(s.code,{children:"important"})," selector, you’ll need to ensure that the root element of your site matches it.  Using the example above, we would need to set our root element’s ",(0,e.jsx)(s.code,{children:"id"})," attribute to ",(0,e.jsx)(s.code,{children:"app"})," in order for styles to work properly."]}),"\n",(0,e.jsx)(s.p,{children:"配置全部设置完毕并且根元素与 Tailwind 配置中的选择器匹配后，Tailwind 的所有工具都将具有足够高的特异性来击败项目中使用的其他类，而不会干扰内联样式："}),"\n",(0,e.jsxs)(s.p,{children:["\xa5After your configuration is all set up and your root element matches the selector in your Tailwind config, all of Tailwind’s utilities will have a high enough specificity to defeat other classes used in your project, ",(0,e.jsx)(s.strong,{children:"without"})," interfering with inline styles:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>\n<span class="token comment">&lt;!-- ... --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">\n  <span class="token selector"><span class="token class">.high-specificity</span> <span class="token class">.nested</span> <span class="token class">.selector</span></span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token color">blue</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>high-specificity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nested<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token comment">&lt;!-- Will be red-500 --></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selector text-red-500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ... --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n  <span class="token comment">&lt;!-- Will be #bada55 --></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-red-500<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode color">#bada55</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ... --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["使用选择器策略时，请确保包含根选择器的模板文件包含在 ",(0,e.jsx)(s.a,{href:"/docs/optimizing-for-production#basic-usage",children:"内容配置"})," 中，否则在构建生产时将删除所有 CSS。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5When using the selector strategy, be sure that the template file that includes your root selector is included in your ",(0,e.jsx)(s.a,{href:"/docs/optimizing-for-production#basic-usage",children:"content configuration"}),", otherwise all of your CSS will be removed when building for production."]}),"\n",(0,e.jsx)("a",{id:"important-modifier"}),"\n",(0,e.jsx)(p,{level:4,id:"-10",children:"重要修饰符"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Important modifier"}),"\n",(0,e.jsxs)(s.p,{children:["或者，你可以通过在开头添加 ",(0,e.jsx)(s.code,{children:"!"})," 字符来使任何工具变得重要："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Alternatively, you can make any utility important by adding a ",(0,e.jsx)(s.code,{children:"!"})," character to the beginning:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!font-medium font-bold<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  This will be medium even though bold comes later in the CSS.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"!"})," 始终位于工具名称的开头，在任何变体之后，但在任何前缀之前："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"!"})," always goes at the beginning of the utility name, after any variants, but before any prefix:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sm:hover:!tw-font-bold<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code>'}}),"\n",(0,e.jsx)(s.p,{children:"这在你需要增加特异性的极少数情况下很有用，因为你与某些你无法控制的样式交战。"}),"\n",(0,e.jsx)(s.p,{children:"\xa5This can be useful in rare situations where you need to increase specificity because you’re at war with some styles you don’t control."}),"\n",(0,e.jsx)("a",{id:"separator"}),"\n",(0,e.jsx)(p,{level:3,id:"-10",children:"分隔符"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Separator"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"separator"})," 选项允许你自定义应该使用哪个字符来将修饰符（屏幕尺寸、",(0,e.jsx)(s.code,{children:"hover"}),"、",(0,e.jsx)(s.code,{children:"focus"})," 等）与工具名称（",(0,e.jsx)(s.code,{children:"text-center"}),"、",(0,e.jsx)(s.code,{children:"items-end"})," 等）分开。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"separator"})," option lets you customize which character should be used to separate modifiers (screen sizes, ",(0,e.jsx)(s.code,{children:"hover"}),", ",(0,e.jsx)(s.code,{children:"focus"}),", etc.) from utility names (",(0,e.jsx)(s.code,{children:"text-center"}),", ",(0,e.jsx)(s.code,{children:"items-end"}),", etc.)."]}),"\n",(0,e.jsxs)(s.p,{children:["我们默认使用冒号 (",(0,e.jsx)(s.code,{children:":"}),")，但如果你使用不支持类名中特殊字符的模板语言（如 ",(0,e.jsx)(s.a,{href:"https://pug.nodejs.cn",children:"Pug"}),"），更改它可能很有用。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5We use a colon by default (",(0,e.jsx)(s.code,{children:":"}),"), but it can be useful to change this if you’re using a templating language like ",(0,e.jsx)(s.a,{href:"https://pug.nodejs.cn",children:"Pug"})," that doesn’t support special characters in class names."]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">separator</span><span class="token operator">:</span> <span class="token string">\'_\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)("a",{id:"core-plugins"}),"\n",(0,e.jsx)(p,{level:3,id:"-11",children:"核心插件"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Core Plugins"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"corePlugins"})," 部分允许你完全禁用 Tailwind 通常默认生成的类，如果你的项目不需要它们的话。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"corePlugins"})," section lets you completely disable classes that Tailwind would normally generate by default if you don’t need them for your project."]}),"\n",(0,e.jsxs)(s.p,{children:["要禁用特定的核心插件，请为 ",(0,e.jsx)(s.code,{children:"corePlugins"})," 提供一个对象，将这些插件设置为 ",(0,e.jsx)(s.code,{children:"false"}),"："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5To disable specific core plugins, provide an object for ",(0,e.jsx)(s.code,{children:"corePlugins"})," that sets those plugins to ",(0,e.jsx)(s.code,{children:"false"}),":"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">corePlugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">float</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">objectFit</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">objectPosition</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"如果你想将应启用的核心插件列入安全列表，请提供一个包含你要使用的核心插件列表的数组："}),"\n",(0,e.jsx)(s.p,{children:"\xa5If you’d like to safelist which core plugins should be enabled, provide an array that includes a list of the core plugins you’d like to use:"}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">corePlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">\'margin\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'padding\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'backgroundColor\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"如果你想禁用所有 Tailwind 的核心插件，而只是将 Tailwind 用作处理你自己的自定义插件的工具，请提供一个空数组："}),"\n",(0,e.jsx)(s.p,{children:"\xa5If you’d like to disable all of Tailwind’s core plugins and simply use Tailwind as a tool for processing your own custom plugins, provide an empty array:"}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">corePlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"以下是每个核心插件的列表以供参考："}),"\n",(0,e.jsx)(s.p,{children:"\xa5Here’s a list of every core plugin for reference:"}),"\n",(0,e.jsx)(i,{}),"\n",(0,e.jsx)(s.hr,{}),"\n",(0,e.jsx)("a",{id:"using-multiple-configurations"}),"\n",(0,e.jsx)(p,{level:2,id:"-12",children:"使用多种配置"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Using multiple configurations"}),"\n",(0,e.jsxs)(s.p,{children:["对于需要使用不同 Tailwind 配置生成多个 CSS 文件的项目，请使用 ",(0,e.jsx)(s.code,{children:"@config"})," 指令指定应为每个 CSS 入口点使用哪个配置文件："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5For projects that need to generate multiple CSS files using different Tailwind configurations, use the ",(0,e.jsx)(s.code,{children:"@config"})," directive to specify which config file should be used for each CSS entry point:"]}),"\n",(0,e.jsxs)(r.E,{children:[(0,e.jsx)(a,{filename:"site.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.site.config.js"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span></code></pre>'}),(0,e.jsx)(a,{filename:"admin.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.admin.config.js"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span></code></pre>'})]}),"\n",(0,e.jsxs)(s.p,{children:["在 ",(0,e.jsx)(s.a,{href:"/docs/functions-and-directives#config",children:"函数和指令"})," 文档中了解有关 ",(0,e.jsx)(s.code,{children:"@config"})," 指令的更多信息。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Learn more about the ",(0,e.jsx)(s.code,{children:"@config"})," directive in the ",(0,e.jsx)(s.a,{href:"/docs/functions-and-directives#config",children:"Functions & Directives"})," documentation."]}),"\n",(0,e.jsx)(s.hr,{}),"\n",(0,e.jsx)("a",{id:"referencing-in-javascript"}),"\n",(0,e.jsx)(p,{level:2,id:"java-script",children:"在 JavaScript 中引用"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Referencing in JavaScript"}),"\n",(0,e.jsx)(s.p,{children:"在你自己的客户端 JavaScript 中引用你的配置值通常很有用 - 例如，在 React 或 Vue 组件中动态应用内联样式时访问一些主题值。"}),"\n",(0,e.jsx)(s.p,{children:"\xa5It can often be useful to reference your configuration values in your own client-side JavaScript — for example to access some of your theme values when dynamically applying inline styles in a React or Vue component."}),"\n",(0,e.jsxs)(s.p,{children:["为简化此操作，Tailwind 提供了一个 ",(0,e.jsx)(s.code,{children:"resolveConfig"})," 辅助程序，你可以使用它来生成配置对象的完全合并版本："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5To make this easy, Tailwind provides a ",(0,e.jsx)(s.code,{children:"resolveConfig"})," helper you can use to generate a fully merged version of your configuration object:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-js",dangerouslySetInnerHTML:{__html:'<code class="language-js"><span class="token keyword module">import</span> <span class="token imports">resolveConfig</span> <span class="token keyword module">from</span> <span class="token string">\'tailwindcss/resolveConfig\'</span>\n<span class="token keyword module">import</span> <span class="token imports">tailwindConfig</span> <span class="token keyword module">from</span> <span class="token string">\'./tailwind.config.js\'</span>\n\n<span class="token keyword">const</span> fullConfig <span class="token operator">=</span> <span class="token function">resolveConfig</span><span class="token punctuation">(</span>tailwindConfig<span class="token punctuation">)</span>\n\nfullConfig<span class="token punctuation">.</span><span class="token property-access">theme</span><span class="token punctuation">.</span><span class="token property-access">width</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>\n<span class="token comment">// => \'1rem\'</span>\n\nfullConfig<span class="token punctuation">.</span><span class="token property-access">theme</span><span class="token punctuation">.</span><span class="token property-access">screens</span><span class="token punctuation">.</span><span class="token property-access">md</span>\n<span class="token comment">// => \'768px\'</span>\n\nfullConfig<span class="token punctuation">.</span><span class="token property-access">theme</span><span class="token punctuation">.</span><span class="token property-access">boxShadow</span><span class="token punctuation">[</span><span class="token string">\'2xl\'</span><span class="token punctuation">]</span>\n<span class="token comment">// => \'0 25px 50px -12px rgba(0, 0, 0, 0.25)\'</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["请注意，这将传递我们的许多构建时依赖，从而导致更大的客户端包大小。为避免这种情况，我们建议使用像 ",(0,e.jsx)(s.a,{href:"https://github.com/kentcdodds/babel-plugin-preval",children:"babel-plugin-preval"})," 这样的工具在构建时生成配置的静态版本。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Note that this will transitively pull in a lot of our build-time dependencies, resulting in bigger client-side bundle size. To avoid this, we recommend using a tool like ",(0,e.jsx)(s.a,{href:"https://github.com/kentcdodds/babel-plugin-preval",children:"babel-plugin-preval"})," to generate a static version of your configuration at build-time."]}),"\n",(0,e.jsx)(s.hr,{}),"\n",(0,e.jsx)("a",{id:"typescript-types"}),"\n",(0,e.jsx)(p,{level:2,id:"type-script",children:"TypeScript 类型"}),"\n",(0,e.jsx)(s.p,{children:"\xa5TypeScript types"}),"\n",(0,e.jsxs)(s.p,{children:["我们为 ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," 文件提供了第一方 TypeScript 类型，它为你提供了各种有用的 IDE 支持，并使更改配置变得容易得多，而无需参考文档。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5We ship first-party TypeScript types for the ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," file which give you all sorts of useful IDE support, and makes it a lot easier to make changes to your configuration without referencing the documentation quite as much."]}),"\n",(0,e.jsx)(s.p,{children:"使用 Tailwind CLI 生成的配置文件默认包含必要的类型注释，但要手动配置 TypeScript 类型，只需在配置对象上方添加类型注释："}),"\n",(0,e.jsx)(s.p,{children:"\xa5Configuration files generated with Tailwind CLI include the necessary type annotation by default, but to configure TypeScript types manually, just add the type annotation above your configuration object:"}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'})]})}function g(n={}){return(0,e.jsx)(d,Object.assign({},n,{children:(0,e.jsx)(k,n)}))}var x=g;function h(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}g.layoutProps={Layout:u,meta:{title:"配置",description:"配置和自定义 Tailwind 安装的指南。"},slug:"configuration",tableOfContents:[{title:"创建配置文件",slug:"",children:[{title:"使用不同的文件名",slug:"-1",children:[]},{title:"使用 ESM 或 TypeScript",slug:"esm-type-script",children:[]},{title:"生成 PostCSS 配置文件",slug:"post-css",children:[]},{title:"脚手架整个默认配置",slug:"-2",children:[]}]},{title:"配置选项",slug:"-3",children:[{title:"内容",slug:"-4",children:[]},{title:"主题",slug:"-5",children:[]},{title:"插件",slug:"-6",children:[]},{title:"预设",slug:"-7",children:[]},{title:"前缀",slug:"-8",children:[]},{title:"重要",slug:"-9",children:[{title:"选择器策略",slug:"-10"},{title:"重要修饰符",slug:"-10"}]},{title:"分隔符",slug:"-10",children:[]},{title:"核心插件",slug:"-11",children:[]}]},{title:"使用多种配置",slug:"-12",children:[]},{title:"在 JavaScript 中引用",slug:"java-script",children:[]},{title:"TypeScript 类型",slug:"type-script",children:[]}]}},64637:function(n,s,a){"use strict";a.d(s,{E:function(){return u}});var e=a(85893),t=a(67294),p=a(49808),o=a(86010),l=a(4493);function c({className:n}){return(0,e.jsx)("div",{className:(0,o.Z)("pointer-events-none absolute inset-0",n)})}function i({children:n,selectedIndex:s,myIndex:a,marker:t}){let l=s===a,i={leading:l?null:s===a-1?"capped":"normal",trailing:l?null:s===a+1?"capped":"normal"};return(0,e.jsxs)(p.O,{className:(0,o.Z)("flex items-center relative z-10 overflow-hidden px-4 py-1 [&:not(:focus-visible)]:focus:outline-none",l?"text-sky-300":"text-slate-400"),children:[(0,e.jsx)("span",{className:"z-10",children:n}),"close"===t&&(0,e.jsx)("svg",{viewBox:"0 0 4 4",className:"ml-2.5 flex-none w-1 h-1 text-slate-500 overflow-visible",children:(0,e.jsx)("path",{d:"M-1 -1L5 5M5 -1L-1 5",fill:"none",stroke:"currentColor",strokeLinecap:"round"})}),"modified"===t&&(0,e.jsx)("div",{className:"ml-2.5 flex-none w-1 h-1 rounded-full bg-current"}),!l&&(0,e.jsx)(c,{className:(0,o.Z)("bg-slate-700/50 border-y border-slate-500/30","capped"===i.leading&&"border-l rounded-tl","capped"===i.trailing&&"border-r rounded-tr")}),"normal"===i.trailing&&(0,e.jsx)(c,{className:"inset-y-px border-r border-slate-200/5 z-20"}),l&&(0,e.jsx)(c,{className:"border-b border-b-sky-300"})]})}let r={plain:({children:n})=>(0,e.jsx)("div",{className:"not-prose bg-slate-800 rounded-xl shadow-md",children:n}),framed:({children:n,...s})=>(0,e.jsx)(l.RQ,{...s,children:(0,e.jsx)("div",{className:"not-prose bg-slate-800 rounded-tl-xl shadow-md",children:n})})};function u({children:n,style:s="plain",actions:a,...l}){let[c,u]=(0,t.useState)(0),d=r[s];return(0,e.jsx)(d,{...l,children:(0,e.jsxs)(p.O.Group,{as:"div",onChange:u,children:[(0,e.jsxs)("div",{className:"flex",children:[(0,e.jsx)(p.O.List,{className:"flex text-slate-400 text-xs leading-6 overflow-hidden rounded-tl-xl pt-2",children:n.map((n,s)=>(0,e.jsx)(i,{myIndex:s,selectedIndex:c,children:n.props.filename},n.props.filename))}),(0,e.jsx)("div",{className:"flex-auto flex pt-2 rounded-tr-xl overflow-hidden",children:(0,e.jsx)("div",{className:(0,o.Z)("flex-auto flex justify-end bg-slate-700/50 border-y border-slate-500/30 pr-4",c===n.length-1?"rounded-tl border-l":"")})}),a?(0,e.jsx)("div",{className:"absolute top-2 right-4 h-8 flex",children:a({selectedIndex:c})}):null]}),(0,e.jsx)(p.O.Panels,{className:"flex overflow-auto",children:n.map(n=>(0,e.jsx)(p.O.Panel,{className:"flex-none min-w-full p-5 text-sm leading-6 text-slate-50 ligatures-none",...n.props.code?{dangerouslySetInnerHTML:{__html:n.props.code}}:{children:n.props.children}},n.props.filename))})]})})}},72788:function(n,s,a){"use strict";a.d(s,{L:function(){return l}});var e=a(85893),t=a(97903),p=a(77929),o=a(87308);function l(n){return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(p.Dx,{children:n.layoutProps.meta.metaTitle||n.layoutProps.meta.title}),(0,e.jsx)(t.C,{nav:o.u,...n})]})}l.nav=o.u},49808:function(n,s,a){"use strict";a.d(s,{O:function(){return M}});var e,t=a(67294),p=a(12351),o=a(19946),l=a(32984),c=a(61363),i=a(84575),r=a(16723),u=a(23784),d=a(14157),k=a(3855),g=a(46045);function x({onFocus:n}){let[s,a]=(0,t.useState)(!0);return s?t.createElement(g._,{as:"button",type:"button",features:g.A.Focusable,onFocus:s=>{s.preventDefault();let e,t=50;e=requestAnimationFrame(function s(){if(t--<=0){e&&cancelAnimationFrame(e);return}if(n()){a(!1),cancelAnimationFrame(e);return}e=requestAnimationFrame(s)})}}):null}var h=a(73781),m=a(81021),f=((e=f||{})[e.SetSelectedIndex=0]="SetSelectedIndex",e[e.RegisterTab=1]="RegisterTab",e[e.UnregisterTab=2]="UnregisterTab",e[e.RegisterPanel=3]="RegisterPanel",e[e.UnregisterPanel=4]="UnregisterPanel",e);let y={0(n,s){let a=n.tabs.filter(n=>{var s;return!(null!=(s=n.current)&&s.hasAttribute("disabled"))});if(s.index<0)return{...n,selectedIndex:n.tabs.indexOf(a[0])};if(s.index>n.tabs.length)return{...n,selectedIndex:n.tabs.indexOf(a[a.length-1])};let e=n.tabs.slice(0,s.index),t=[...n.tabs.slice(s.index),...e].find(n=>a.includes(n));return t?{...n,selectedIndex:n.tabs.indexOf(t)}:n},1(n,s){var a;if(n.tabs.includes(s.tab))return n;let e=n.tabs[n.selectedIndex],t=(0,i.z2)([...n.tabs,s.tab],n=>n.current),p=null!=(a=t.indexOf(e))?a:n.selectedIndex;return -1===p&&(p=n.selectedIndex),{...n,tabs:t,selectedIndex:p}},2:(n,s)=>({...n,tabs:n.tabs.filter(n=>n!==s.tab)}),3:(n,s)=>n.panels.includes(s.panel)?n:{...n,panels:(0,i.z2)([...n.panels,s.panel],n=>n.current)},4:(n,s)=>({...n,panels:n.panels.filter(n=>n!==s.panel)})},j=(0,t.createContext)(null);function b(n){let s=(0,t.useContext)(j);if(null===s){let s=Error(`<${n} /> is missing a parent <Tab.Group /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(s,b),s}return s}j.displayName="TabsSSRContext";let w=(0,t.createContext)(null);function v(n){let s=(0,t.useContext)(w);if(null===s){let s=Error(`<${n} /> is missing a parent <Tab.Group /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(s,v),s}return s}w.displayName="TabsDataContext";let T=(0,t.createContext)(null);function S(n){let s=(0,t.useContext)(T);if(null===s){let s=Error(`<${n} /> is missing a parent <Tab.Group /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(s,S),s}return s}function C(n,s){return(0,l.E)(s.type,y,n,s)}T.displayName="TabsActionsContext";let I=t.Fragment,P=(0,p.yV)(function(n,s){let{defaultIndex:a=0,vertical:e=!1,manual:o=!1,onChange:l,selectedIndex:c=null,...i}=n,d=e?"vertical":"horizontal",g=o?"manual":"auto",h=null!==c,m=(0,u.T)(s),[f,y]=(0,t.useReducer)(C,{selectedIndex:null!=c?c:a,tabs:[],panels:[]}),b=(0,t.useMemo)(()=>({selectedIndex:f.selectedIndex}),[f.selectedIndex]),v=(0,k.E)(l||(()=>{})),S=(0,k.E)(f.tabs),P=(0,t.useMemo)(()=>({orientation:d,activation:g,...f}),[d,g,f]),_=(0,k.E)(h?n.selectedIndex:f.selectedIndex),N=(0,t.useMemo)(()=>({registerTab:n=>(y({type:1,tab:n}),()=>y({type:2,tab:n})),registerPanel:n=>(y({type:3,panel:n}),()=>y({type:4,panel:n})),change(n){_.current!==n&&v.current(n),h||y({type:0,index:n})}}),[y,h]);(0,r.e)(()=>{y({type:0,index:null!=c?c:a})},[c]);let E=(0,t.useRef)({tabs:[],panels:[]});return t.createElement(j.Provider,{value:E},t.createElement(T.Provider,{value:N},t.createElement(w.Provider,{value:P},P.tabs.length<=0&&t.createElement(x,{onFocus:()=>{var n,s;for(let a of S.current)if((null==(n=a.current)?void 0:n.tabIndex)===0)return null==(s=a.current)||s.focus(),!0;return!1}}),(0,p.sY)({ourProps:{ref:m},theirProps:i,slot:b,defaultTag:I,name:"Tabs"}))))}),_=(0,p.yV)(function(n,s){let{orientation:a,selectedIndex:e}=v("Tab.List"),t=(0,u.T)(s);return(0,p.sY)({ourProps:{ref:t,role:"tablist","aria-orientation":a},theirProps:n,slot:{selectedIndex:e},defaultTag:"div",name:"Tabs.List"})}),N=(0,p.yV)(function(n,s){var a,e;let k=`headlessui-tabs-tab-${(0,o.M)()}`,{orientation:g,activation:x,selectedIndex:f,tabs:y,panels:j}=v("Tab"),w=S("Tab"),T=b("Tab"),C=(0,t.useRef)(null),I=(0,u.T)(C,s);(0,r.e)(()=>w.registerTab(C),[w,C]);let P=T.current.tabs.indexOf(k);-1===P&&(P=T.current.tabs.push(k)-1);let _=y.indexOf(C);-1===_&&(_=P);let N=_===f,E=(0,h.z)(n=>{let s=y.map(n=>n.current).filter(Boolean);if(n.key===c.R.Space||n.key===c.R.Enter){n.preventDefault(),n.stopPropagation(),w.change(_);return}switch(n.key){case c.R.Home:case c.R.PageUp:return n.preventDefault(),n.stopPropagation(),(0,i.jA)(s,i.TO.First);case c.R.End:case c.R.PageDown:return n.preventDefault(),n.stopPropagation(),(0,i.jA)(s,i.TO.Last)}if((0,l.E)(g,{vertical:()=>n.key===c.R.ArrowUp?(0,i.jA)(s,i.TO.Previous|i.TO.WrapAround):n.key===c.R.ArrowDown?(0,i.jA)(s,i.TO.Next|i.TO.WrapAround):void 0,horizontal:()=>n.key===c.R.ArrowLeft?(0,i.jA)(s,i.TO.Previous|i.TO.WrapAround):n.key===c.R.ArrowRight?(0,i.jA)(s,i.TO.Next|i.TO.WrapAround):void 0}))return n.preventDefault()}),L=(0,h.z)(()=>{var n;null==(n=C.current)||n.focus()}),M=(0,t.useRef)(!1),O=(0,h.z)(()=>{var n;M.current||(M.current=!0,null==(n=C.current)||n.focus(),w.change(_),(0,m.Y)(()=>{M.current=!1}))}),A=(0,h.z)(n=>{n.preventDefault()}),R=(0,t.useMemo)(()=>({selected:N}),[N]),z={ref:I,onKeyDown:E,onFocus:"manual"===x?L:O,onMouseDown:A,onClick:O,id:k,role:"tab",type:(0,d.f)(n,C),"aria-controls":null==(e=null==(a=j[_])?void 0:a.current)?void 0:e.id,"aria-selected":N,tabIndex:N?0:-1};return(0,p.sY)({ourProps:z,theirProps:n,slot:R,defaultTag:"button",name:"Tabs.Tab"})}),E=(0,p.yV)(function(n,s){let{selectedIndex:a}=v("Tab.Panels"),e=(0,u.T)(s),o=(0,t.useMemo)(()=>({selectedIndex:a}),[a]);return(0,p.sY)({ourProps:{ref:e},theirProps:n,slot:o,defaultTag:"div",name:"Tabs.Panels"})}),L=p.AN.RenderStrategy|p.AN.Static,M=Object.assign(N,{Group:P,List:_,Panels:E,Panel:(0,p.yV)(function(n,s){var a,e,l,c;let{selectedIndex:i,tabs:d,panels:k}=v("Tab.Panel"),x=S("Tab.Panel"),h=b("Tab.Panel"),m=`headlessui-tabs-panel-${(0,o.M)()}`,f=(0,t.useRef)(null),y=(0,u.T)(f,s);(0,r.e)(()=>x.registerPanel(f),[x,f]);let j=h.current.panels.indexOf(m);-1===j&&(j=h.current.panels.push(m)-1);let w=k.indexOf(f);-1===w&&(w=j);let T=w===i,C=(0,t.useMemo)(()=>({selected:T}),[T]),I={ref:y,id:m,role:"tabpanel","aria-labelledby":null==(e=null==(a=d[w])?void 0:a.current)?void 0:e.id,tabIndex:T?0:-1};return T||null!=(l=n.unmount)&&!l||null!=(c=n.static)&&c?(0,p.sY)({ourProps:I,theirProps:n,slot:C,defaultTag:"div",features:L,visible:T,name:"Tabs.Panel"}):t.createElement(g._,{as:"span",...I})})})},11151:function(n,s,a){"use strict";a.d(s,{Zo:function(){return l},ah:function(){return p}});var e=a(67294);let t=e.createContext({});function p(n){let s=e.useContext(t);return e.useMemo(()=>"function"==typeof n?n(s):{...s,...n},[s,n])}let o={};function l({components:n,children:s,disableParentContext:a}){let l;return l=a?"function"==typeof n?n({}):n||o:p(n),e.createElement(t.Provider,{value:l},s)}}},function(n){n.O(0,[3430,7996,9495,224,7308,9774,2888,179],function(){return n(n.s=41992)}),_N_E=n.O()}]);