(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8827],{39115:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/functions-and-directives",function(){return a(41638)}])},41638:function(n,s,a){"use strict";a.r(s);var e=a(85893),t=a(11151),o=a(72788),l=a(36336),p=a(30196),c=a(64637);let i=o.L,r=l.X_;function u(n){let s=Object.assign({p:"p",a:"a",code:"code",pre:"pre",strong:"strong",hr:"hr"},(0,t.ah)(),n.components),{Heading:a,Editor:o}=s;return o||k("Editor",!0),a||k("Heading",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("a",{id:"directives"}),"\n",(0,e.jsx)(a,{level:2,id:"",children:"指令"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Directives"}),"\n",(0,e.jsxs)(s.p,{children:["指令是自定义的特定于 Tailwind 的 ",(0,e.jsx)(s.a,{href:"https://web.nodejs.cn/en-US/docs/Web/CSS/At-rule",children:"at-rules"}),"，你可以在 CSS 中使用它，为 Tailwind CSS 项目提供特殊功能。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Directives are custom Tailwind-specific ",(0,e.jsx)(s.a,{href:"https://web.nodejs.cn/en-US/docs/Web/CSS/At-rule",children:"at-rules"})," you can use in your CSS that offer special functionality for Tailwind CSS projects."]}),"\n",(0,e.jsx)("a",{id:"tailwind"}),"\n",(0,e.jsx)(a,{level:3,id:"tailwind",children:"@tailwind"}),"\n",(0,e.jsxs)(s.p,{children:["使用 ",(0,e.jsx)(s.code,{children:"@tailwind"})," 指令将 Tailwind 的 ",(0,e.jsx)(s.code,{children:"base"}),"、",(0,e.jsx)(s.code,{children:"components"}),"、",(0,e.jsx)(s.code,{children:"utilities"})," 和 ",(0,e.jsx)(s.code,{children:"variants"})," 样式插入到你的 CSS 中。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Use the ",(0,e.jsx)(s.code,{children:"@tailwind"})," directive to insert Tailwind’s ",(0,e.jsx)(s.code,{children:"base"}),", ",(0,e.jsx)(s.code,{children:"components"}),", ",(0,e.jsx)(s.code,{children:"utilities"})," and ",(0,e.jsx)(s.code,{children:"variants"})," styles into your CSS."]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token comment">/**\n\n * This injects Tailwind\'s base styles and any base styles registered by\n\n * plugins.\n */</span>\n<span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n\n<span class="token comment">/**\n\n * This injects Tailwind\'s component classes and any component classes\n\n * registered by plugins.\n */</span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n\n<span class="token comment">/**\n\n * This injects Tailwind\'s utility classes and any utility classes registered\n\n * by plugins.\n */</span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span>\n\n<span class="token comment">/**\n\n * Use this directive to control where Tailwind injects the hover, focus,\n\n * responsive, dark mode, and other variants of each class.\n\n *  * If omitted, Tailwind will append these classes to the very end of\n\n * your stylesheet by default.\n */</span>\n<span class="token atrule"><span class="token rule">@tailwind</span> variants<span class="token punctuation">;</span></span></code>'}}),"\n",(0,e.jsx)("a",{id:"layer"}),"\n",(0,e.jsx)(a,{level:3,id:"layer",children:"@layer"}),"\n",(0,e.jsxs)(s.p,{children:["使用 ",(0,e.jsx)(s.code,{children:"@layer"})," 指令告诉 Tailwind 一组自定义样式属于哪个 “bucket”。有效图层为 ",(0,e.jsx)(s.code,{children:"base"}),"、",(0,e.jsx)(s.code,{children:"components"})," 和 ",(0,e.jsx)(s.code,{children:"utilities"}),"。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Use the ",(0,e.jsx)(s.code,{children:"@layer"})," directive to tell Tailwind which “bucket” a set of custom styles belong to. Valid layers are ",(0,e.jsx)(s.code,{children:"base"}),", ",(0,e.jsx)(s.code,{children:"components"}),", and ",(0,e.jsx)(s.code,{children:"utilities"}),"."]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@layer</span> base</span> <span class="token punctuation">{</span>\n  <span class="token selector">h1</span> <span class="token punctuation">{</span>\n    <span class="token atrule atapply"><span class="token rule">@apply</span> text-2<span class="token unit">xl</span><span class="token punctuation">;</span></span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">h2</span> <span class="token punctuation">{</span>\n    <span class="token atrule atapply"><span class="token rule">@apply</span> text-xl<span class="token punctuation">;</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@layer</span> components</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.btn-blue</span></span> <span class="token punctuation">{</span>\n    <span class="token atrule atapply"><span class="token rule">@apply</span> bg-blue-500 <span class="token property">hover</span><span class="token punctuation">:</span>bg-blue-700 text-white font-bold py-2 px-4 rounded<span class="token punctuation">;</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@layer</span> utilities</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.filter-none</span></span> <span class="token punctuation">{</span>\n    <span class="token property">filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector"><span class="token class">.filter-grayscale</span></span> <span class="token punctuation">{</span>\n    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token unit">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["Tailwind 会自动将任何 ",(0,e.jsx)(s.code,{children:"@layer"})," 指令中的 CSS 移动到与对应的 ",(0,e.jsx)(s.code,{children:"@tailwind"})," 规则相同的位置，因此你不必担心按特定顺序编写 CSS 以避免特异性问题。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Tailwind will automatically move the CSS within any ",(0,e.jsx)(s.code,{children:"@layer"})," directive to the same place as the corresponding ",(0,e.jsx)(s.code,{children:"@tailwind"})," rule, so you don’t have to worry about authoring your CSS in a specific order to avoid specificity issues."]}),"\n",(0,e.jsx)(s.p,{children:"添加到图层的任何自定义 CSS 仅当该 CSS 实际用于你的 HTML 时才会包含在最终构建中，就像默认内置到 Tailwind 中的所有类一样。"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Any custom CSS added to a layer will only be included in the final build if that CSS is actually used in your HTML, just like all of the classes built in to Tailwind by default."}),"\n",(0,e.jsxs)(s.p,{children:["使用 ",(0,e.jsx)(s.code,{children:"@layer"})," 封装任何自定义 CSS 还可以使用具有这些规则的修饰符，如 ",(0,e.jsx)(s.code,{children:"hover:"})," 和 ",(0,e.jsx)(s.code,{children:"focus:"})," 或响应式修饰符，如 ",(0,e.jsx)(s.code,{children:"md:"})," 和 ",(0,e.jsx)(s.code,{children:"lg:"}),"。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Wrapping any custom CSS with ",(0,e.jsx)(s.code,{children:"@layer"})," also makes it possible to use modifiers with those rules, like ",(0,e.jsx)(s.code,{children:"hover:"})," and ",(0,e.jsx)(s.code,{children:"focus:"})," or responsive modifiers like ",(0,e.jsx)(s.code,{children:"md:"})," and ",(0,e.jsx)(s.code,{children:"lg:"}),"."]}),"\n",(0,e.jsx)("a",{id:"apply"}),"\n",(0,e.jsx)(a,{level:3,id:"apply",children:"@apply"}),"\n",(0,e.jsxs)(s.p,{children:["使用 ",(0,e.jsx)(s.code,{children:"@apply"})," 将任何现有工具类内联到你自己的自定义 CSS 中。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Use ",(0,e.jsx)(s.code,{children:"@apply"})," to inline any existing utility classes into your own custom CSS."]}),"\n",(0,e.jsx)(s.p,{children:"当你需要编写自定义 CSS（例如覆盖第三方库中的样式）但仍想使用你的设计标记并使用你在 HTML 中习惯使用的相同语法时，这很有用。"}),"\n",(0,e.jsx)(s.p,{children:"\xa5This is useful when you need to write custom CSS (like to override the styles in a third-party library) but still want to work with your design tokens and use the same syntax you’re used to using in your HTML."}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.select2-dropdown</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> rounded-b-lg shadow-md<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.select2-search</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> border border-gray-300 rounded<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.select2-results__group</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> text-lg font-bold text-gray-900<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["默认情况下，任何与 ",(0,e.jsx)(s.code,{children:"@apply"})," 内联的规则都将删除 ",(0,e.jsx)(s.code,{children:"!important"}),"，以避免特殊性问题："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Any rules inlined with ",(0,e.jsx)(s.code,{children:"@apply"})," will have ",(0,e.jsx)(s.code,{children:"!important"})," ",(0,e.jsx)(s.strong,{children:"removed"})," by default to avoid specificity issues:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token comment">/* Input */</span>\n<span class="token selector"><span class="token class">.foo</span></span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token color">blue</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.bar</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> foo<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* Output */</span>\n<span class="token selector"><span class="token class">.foo</span></span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token color">blue</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.bar</span></span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token color">blue</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["如果你想 ",(0,e.jsx)(s.code,{children:"@apply"})," 现有类并将其变为 ",(0,e.jsx)(s.code,{children:"!important"}),"，只需将 ",(0,e.jsx)(s.code,{children:"!important"})," 添加到声明的末尾："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5If you’d like to ",(0,e.jsx)(s.code,{children:"@apply"})," an existing class and make it ",(0,e.jsx)(s.code,{children:"!important"}),", simply add ",(0,e.jsx)(s.code,{children:"!important"})," to the end of the declaration:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token comment">/* Input */</span>\n<span class="token selector"><span class="token class">.btn</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> font-bold py-2 px-4 rounded <span class="token important">!important</span><span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* Output */</span>\n<span class="token selector"><span class="token class">.btn</span></span> <span class="token punctuation">{</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">.5</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token number">.5</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">.25</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(s.p,{children:"请注意，如果你使用的是 Sass/SCSS，则需要使用 Sass 的插值功能才能使其正常工作："}),"\n",(0,e.jsx)(s.p,{children:"\xa5Note that if you’re using Sass/SCSS, you’ll need to use Sass’ interpolation feature to get this to work:"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.btn</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> font-bold py-2 px-4 rounded #</span><span class="token punctuation">{</span><span class="token important">!important</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)("a",{id:"using-apply-with-per-component-css"}),"\n",(0,e.jsx)(a,{level:4,id:"apply-css",children:"将 @apply 与每个组件的 CSS 一起使用"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Using @apply with per-component CSS"}),"\n",(0,e.jsxs)(s.p,{children:["Vue 和 Svelte 等组件框架支持在每个组件文件中的 ",(0,e.jsx)(s.code,{children:"<style>"})," 块中添加每个组件的样式。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Component frameworks like Vue and Svelte support adding per-component styles within a ",(0,e.jsx)(s.code,{children:"<style>"})," block that lives in each component file."]}),"\n",(0,e.jsxs)(s.p,{children:["如果你尝试在这些每个组件 ",(0,e.jsx)(s.code,{children:"<style>"})," 块之一中对你在全局 CSS 中定义的自定义类进行 ",(0,e.jsx)(s.code,{children:"@apply"}),"，你将收到有关该类不存在的错误消息："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5If you try to ",(0,e.jsx)(s.code,{children:"@apply"})," a custom class you’ve defined in your global CSS in one of these per-component ",(0,e.jsx)(s.code,{children:"<style>"})," blocks, you’ll get an error about the class not existing:"]}),"\n",(0,e.jsx)(o,{filename:"main.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@layer</span> components</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.card</span></span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>colors.<span class="token color">white</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>borderRadius.lg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>spacing.6<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>boxShadow.xl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(o,{filename:"Card.svelte",code:'<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">\n  <span class="token selector">div</span> <span class="token punctuation">{</span>\n    <span class="token comment">/* Won\'t work because this file and main.css are processed separately */</span>\n    <span class="token atrule atapply"><span class="token rule">@apply</span> card<span class="token punctuation">;</span></span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["这是因为在幕后，像 Vue 和 Svelte 这样的框架正在独立处理每个 ",(0,e.jsx)(s.code,{children:"<style>"})," 块，并针对每个块单独运行 PostCSS 插件链。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5This is because under-the-hood, frameworks like Vue and Svelte are processing every single ",(0,e.jsx)(s.code,{children:"<style>"})," block independently, and running your PostCSS plugin chain against each one in isolation."]}),"\n",(0,e.jsxs)(s.p,{children:["这意味着如果你有 10 个组件，每个组件都有一个 ",(0,e.jsx)(s.code,{children:"<style>"})," 块，Tailwind 将单独运行 10 次，并且每次运行对其他运行的了解为零。因此，当你尝试在 ",(0,e.jsx)(s.code,{children:"Card.svelte"})," 中执行 ",(0,e.jsx)(s.code,{children:"@apply card"})," 时，它会失败，因为 Tailwind 不知道 ",(0,e.jsx)(s.code,{children:"card"})," 类的存在，因为 Svelte 完全隔离地处理 ",(0,e.jsx)(s.code,{children:"Card.svelte"})," 和 ",(0,e.jsx)(s.code,{children:"main.css"}),"。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5That means if you have 10 components that each have a ",(0,e.jsx)(s.code,{children:"<style>"})," block, Tailwind is being run 10 separate times, and each run has zero knowledge about the other runs. Because of this, when you try to ",(0,e.jsx)(s.code,{children:"@apply card"})," in ",(0,e.jsx)(s.code,{children:"Card.svelte"})," it fails, because Tailwind has no idea that the ",(0,e.jsx)(s.code,{children:"card"})," class exists since Svelte processed ",(0,e.jsx)(s.code,{children:"Card.svelte"})," and ",(0,e.jsx)(s.code,{children:"main.css"})," in total isolation from each other."]}),"\n",(0,e.jsxs)(s.p,{children:["这个问题的解决方案是使用 ",(0,e.jsx)(s.a,{href:"/docs/plugins",children:"插件系统"})," 在组件中定义任何你想要 ",(0,e.jsx)(s.code,{children:"@apply"})," 的自定义样式："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The solution to this problem is to define any custom styles you want to ",(0,e.jsx)(s.code,{children:"@apply"})," in your components using the ",(0,e.jsx)(s.a,{href:"/docs/plugins",children:"plugin system"})," instead:"]}),"\n",(0,e.jsx)(o,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> plugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/plugin\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">plugin</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> addComponents<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">addComponents</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token string-property property">\'.card\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'colors.white\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'borderRadius.lg\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'spacing.6\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'boxShadow.xl\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"这样，Tailwind 处理的任何使用此配置文件的文件都可以访问这些样式。"}),"\n",(0,e.jsx)(s.p,{children:"\xa5This way any file processed by Tailwind that uses this config file will have access to those styles."}),"\n",(0,e.jsxs)(s.p,{children:["老实说，最好的解决办法就是根本不做这种奇怪的事情。按照预期的方式在你的标记中直接使用 Tailwind 的工具，并且不要滥用 ",(0,e.jsx)(s.code,{children:"@apply"})," 功能来执行此类操作，你将获得更好的体验。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Honestly though the best solution is to just not do weird stuff like this at all. Use Tailwind’s utilities directly in your markup the way they are intended to be used, and don’t abuse the ",(0,e.jsx)(s.code,{children:"@apply"})," feature to do things like this and you will have a much better experience."]}),"\n",(0,e.jsx)("a",{id:"config"}),"\n",(0,e.jsx)(a,{level:3,id:"config",children:"@config"}),"\n",(0,e.jsxs)(s.p,{children:["使用 ",(0,e.jsx)(s.code,{children:"@config"})," 指令指定 Tailwind 在编译该 CSS 文件时应使用哪个配置文件。这对于需要为不同的 CSS 入口点使用不同的配置文件的项目很有用。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Use the ",(0,e.jsx)(s.code,{children:"@config"})," directive to specify which config file Tailwind should use when compiling that CSS file. This is useful for projects that need to use different configuration files for different CSS entry points."]}),"\n",(0,e.jsxs)(c.E,{children:[(0,e.jsx)(o,{filename:"site.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.site.config.js"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span></code></pre>'}),(0,e.jsx)(o,{filename:"admin.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.admin.config.js"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span></code></pre>'})]}),"\n",(0,e.jsxs)(s.p,{children:["你提供给 ",(0,e.jsx)(s.code,{children:"@config"})," 指令的路径是相对于该 CSS 文件的，并且将优先于 PostCSS 配置或 Tailwind CLI 中定义的路径。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The path you provide to the ",(0,e.jsx)(s.code,{children:"@config"})," directive is relative to that CSS file, and will take precedence over a path defined in your PostCSS configuration or in the Tailwind CLI."]}),"\n",(0,e.jsxs)(s.p,{children:["请注意，如果你使用的是 ",(0,e.jsx)(s.code,{children:"postcss-import"}),"，则 ",(0,e.jsx)(s.code,{children:"@import"})," 语句需要出现在 ",(0,e.jsx)(s.code,{children:"@config"})," 之前才能正常工作，因为 ",(0,e.jsx)(s.code,{children:"postcss-import"})," 严格遵守 CSS 规范，该规范要求 ",(0,e.jsx)(s.code,{children:"@import"})," 语句位于文件中的任何其他规则之前。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Note that if you’re using ",(0,e.jsx)(s.code,{children:"postcss-import"}),", your ",(0,e.jsx)(s.code,{children:"@import"})," statements need to come before ",(0,e.jsx)(s.code,{children:"@config"})," for things to work correctly, as ",(0,e.jsx)(s.code,{children:"postcss-import"})," is strict about following the CSS spec which requires ",(0,e.jsx)(s.code,{children:"@import"})," statements to precede any other rules in the file."]}),"\n",(0,e.jsxs)(p.qm,{children:["不要将 ",(0,e.jsx)("code",{children:"@config"})," 放在 ",(0,e.jsx)("code",{children:"@import"})," 语句之前"]}),"\n",(0,e.jsx)(o,{filename:"admin.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.admin.config.js"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/base"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"./custom-base.css"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/components"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"./custom-components.css"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/utilities"</span><span class="token punctuation">;</span></span></code></pre>'}),"\n",(0,e.jsxs)(p.Vw,{children:["将 ",(0,e.jsx)("code",{children:"@import"})," 语句放在 ",(0,e.jsx)("code",{children:"@config"})," 指令之前"]}),"\n",(0,e.jsx)(o,{filename:"admin.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/base"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"./custom-base.css"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/components"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"./custom-components.css"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/utilities"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.admin.config.js"</span><span class="token punctuation">;</span></span></code></pre>'}),"\n",(0,e.jsx)(s.hr,{}),"\n",(0,e.jsx)("a",{id:"functions"}),"\n",(0,e.jsx)(a,{level:2,id:"-1",children:"函数"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Functions"}),"\n",(0,e.jsx)(s.p,{children:"Tailwind 添加了一些自定义函数，你可以在 CSS 中使用这些函数来访问特定于 Tailwind 的值。这些函数在构建时进行评估，并在最终 CSS 中被静态值替换。"}),"\n",(0,e.jsx)(s.p,{children:"\xa5Tailwind adds a few custom functions you can use in your CSS to access Tailwind-specific values. These functions are evaluated at build-time, and are replaced by static values in your final CSS."}),"\n",(0,e.jsx)("a",{id:"theme"}),"\n",(0,e.jsx)(a,{level:3,id:"theme",children:"theme()"}),"\n",(0,e.jsxs)(s.p,{children:["使用 ",(0,e.jsx)(s.code,{children:"theme()"})," 函数通过点表示法访问你的 Tailwind 配置值。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Use the ",(0,e.jsx)(s.code,{children:"theme()"})," function to access your Tailwind config values using dot notation."]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.content-area</span></span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token unit">vh</span> <span class="token operator">-</span> <span class="token function">theme</span><span class="token punctuation">(</span>spacing.12<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["如果你需要访问包含点的值（如间距比例中的 ",(0,e.jsx)(s.code,{children:"2.5"})," 值），你可以使用方括号表示法："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5If you need to access a value that contains a dot (like the ",(0,e.jsx)(s.code,{children:"2.5"})," value in the spacing scale), you can use square bracket notation:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.content-area</span></span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token unit">vh</span> <span class="token operator">-</span> <span class="token function">theme</span><span class="token punctuation">(</span>spacing[<span class="token number">2.5</span>]<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["由于 Tailwind 使用 ",(0,e.jsx)(s.a,{href:"/docs/customizing-colors#color-object-syntax",children:"嵌套对象语法"})," 来定义其默认调色板，因此请确保使用点符号来访问嵌套颜色。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5Since Tailwind uses a ",(0,e.jsx)(s.a,{href:"/docs/customizing-colors#color-object-syntax",children:"nested object syntax"})," to define its default color palette, make sure to use dot notation to access the nested colors."]}),"\n",(0,e.jsx)(p.qm,{children:"访问嵌套颜色值时不要使用破折号语法"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.btn-blue</span></span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>colors.blue-500<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(p.Vw,{children:"使用点表示法访问嵌套颜色值"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.btn-blue</span></span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>colors.<span class="token color">blue</span><span class="token number">.500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["要调整使用 ",(0,e.jsx)(s.code,{children:"theme"})," 检索到的颜色的透明度，请使用斜杠后跟你要使用的透明度值："]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5To adjust the opacity of a color retrieved with ",(0,e.jsx)(s.code,{children:"theme"}),", use a slash followed by the opacity value you want to use:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.btn-blue</span></span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>colors.<span class="token color">blue</span><span class="token number">.500</span> <span class="token operator">/</span> <span class="token number">75</span><span class="token unit">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)("a",{id:"screen"}),"\n",(0,e.jsx)(a,{level:3,id:"screen",children:"screen()"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.code,{children:"screen"})," 函数允许你创建按名称引用断点的媒体查询，而不是在你自己的 CSS 中复制它们的值。"]}),"\n",(0,e.jsxs)(s.p,{children:["\xa5The ",(0,e.jsx)(s.code,{children:"screen"})," function allows you to create media queries that reference your breakpoints by name instead of duplicating their values in your own CSS."]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@media</span> <span class="token function">screen</span><span class="token punctuation">(</span>sm<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n  <span class="token comment">/* ... */</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(s.p,{children:"这将在构建时解析为底层屏幕值，生成与指定断点匹配的常规媒体查询："}),"\n",(0,e.jsx)(s.p,{children:"\xa5This will resolve to the underlying screen value at build-time, generating a regular media query that matches specified breakpoint:"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">640</span><span class="token unit">px</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n  <span class="token comment">/* ... */</span>\n<span class="token punctuation">}</span></code>'}})]})}function d(n={}){return(0,e.jsx)(r,Object.assign({},n,{children:(0,e.jsx)(u,n)}))}function k(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}s.default=d,d.layoutProps={Layout:i,meta:{title:"函数和指令",description:"Tailwind 向你的 CSS 公开的自定义函数和指令的参考。"},slug:"functions-and-directives",tableOfContents:[{title:"指令",slug:"",children:[{title:"@tailwind",slug:"tailwind",children:[]},{title:"@layer",slug:"layer",children:[]},{title:"@apply",slug:"apply",children:[{title:"将 @apply 与每个组件的 CSS 一起使用",slug:"apply-css"}]},{title:"@config",slug:"config",children:[]}]},{title:"函数",slug:"-1",children:[{title:"theme()",slug:"theme",children:[]},{title:"screen()",slug:"screen",children:[]}]}]}},64637:function(n,s,a){"use strict";a.d(s,{E:function(){return u}});var e=a(85893),t=a(67294),o=a(49808),l=a(86010),p=a(4493);function c({className:n}){return(0,e.jsx)("div",{className:(0,l.Z)("pointer-events-none absolute inset-0",n)})}function i({children:n,selectedIndex:s,myIndex:a,marker:t}){let p=s===a,i={leading:p?null:s===a-1?"capped":"normal",trailing:p?null:s===a+1?"capped":"normal"};return(0,e.jsxs)(o.O,{className:(0,l.Z)("flex items-center relative z-10 overflow-hidden px-4 py-1 [&:not(:focus-visible)]:focus:outline-none",p?"text-sky-300":"text-slate-400"),children:[(0,e.jsx)("span",{className:"z-10",children:n}),"close"===t&&(0,e.jsx)("svg",{viewBox:"0 0 4 4",className:"ml-2.5 flex-none w-1 h-1 text-slate-500 overflow-visible",children:(0,e.jsx)("path",{d:"M-1 -1L5 5M5 -1L-1 5",fill:"none",stroke:"currentColor",strokeLinecap:"round"})}),"modified"===t&&(0,e.jsx)("div",{className:"ml-2.5 flex-none w-1 h-1 rounded-full bg-current"}),!p&&(0,e.jsx)(c,{className:(0,l.Z)("bg-slate-700/50 border-y border-slate-500/30","capped"===i.leading&&"border-l rounded-tl","capped"===i.trailing&&"border-r rounded-tr")}),"normal"===i.trailing&&(0,e.jsx)(c,{className:"inset-y-px border-r border-slate-200/5 z-20"}),p&&(0,e.jsx)(c,{className:"border-b border-b-sky-300"})]})}let r={plain:({children:n})=>(0,e.jsx)("div",{className:"not-prose bg-slate-800 rounded-xl shadow-md",children:n}),framed:({children:n,...s})=>(0,e.jsx)(p.RQ,{...s,children:(0,e.jsx)("div",{className:"not-prose bg-slate-800 rounded-tl-xl shadow-md",children:n})})};function u({children:n,style:s="plain",actions:a,...p}){let[c,u]=(0,t.useState)(0),d=r[s];return(0,e.jsx)(d,{...p,children:(0,e.jsxs)(o.O.Group,{as:"div",onChange:u,children:[(0,e.jsxs)("div",{className:"flex",children:[(0,e.jsx)(o.O.List,{className:"flex text-slate-400 text-xs leading-6 overflow-hidden rounded-tl-xl pt-2",children:n.map((n,s)=>(0,e.jsx)(i,{myIndex:s,selectedIndex:c,children:n.props.filename},n.props.filename))}),(0,e.jsx)("div",{className:"flex-auto flex pt-2 rounded-tr-xl overflow-hidden",children:(0,e.jsx)("div",{className:(0,l.Z)("flex-auto flex justify-end bg-slate-700/50 border-y border-slate-500/30 pr-4",c===n.length-1?"rounded-tl border-l":"")})}),a?(0,e.jsx)("div",{className:"absolute top-2 right-4 h-8 flex",children:a({selectedIndex:c})}):null]}),(0,e.jsx)(o.O.Panels,{className:"flex overflow-auto",children:n.map(n=>(0,e.jsx)(o.O.Panel,{className:"flex-none min-w-full p-5 text-sm leading-6 text-slate-50 ligatures-none",...n.props.code?{dangerouslySetInnerHTML:{__html:n.props.code}}:{children:n.props.children}},n.props.filename))})]})})}},30196:function(n,s,a){"use strict";a.d(s,{$o:function(){return l},Vw:function(){return t},qm:function(){return o}});var e=a(85893);function t({children:n}){return(0,e.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,e.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-cyan-500 text-white flex items-center justify-center ring-2 ring-cyan-500 dark:bg-sky-500 dark:ring-sky-500",children:[(0,e.jsx)("svg",{width:"6",height:"4.5",className:"overflow-visible","aria-hidden":"true",children:(0,e.jsx)("path",{d:"M6 0L2 4.5L0 2.5",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,e.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-cyan-500/30 rounded-full dark:bg-sky-400/30"})]}),(0,e.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-slate-900 dark:text-slate-200",children:n})]})}function o({children:n}){return(0,e.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,e.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-rose-400 text-white flex items-center justify-center ring-2 ring-rose-400 dark:bg-red-400 dark:ring-red-400",children:[(0,e.jsx)("svg",{width:"6",height:"6",className:"overflow-visible","aria-hidden":"true",children:(0,e.jsx)("path",{d:"M0 0L6 6M6 0L0 6",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,e.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-rose-200 rounded-full dark:bg-red-200/25"})]}),(0,e.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-slate-900 dark:text-slate-200",children:n})]})}function l({children:n}){return(0,e.jsxs)("div",{className:"mt-6 -mb-1 flex space-x-2",children:[(0,e.jsx)("svg",{className:"flex-none w-5 h-5 text-slate-400 dark:text-slate-600",viewBox:"0 0 20 20",fill:"currentColor","aria-hidden":"true",children:(0,e.jsx)("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",clipRule:"evenodd"})}),(0,e.jsx)("p",{className:"m-0 text-slate-700 text-sm font-medium dark:text-slate-200",children:n})]})}},72788:function(n,s,a){"use strict";a.d(s,{L:function(){return p}});var e=a(85893),t=a(97903),o=a(77929),l=a(87308);function p(n){return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(o.Dx,{children:n.layoutProps.meta.metaTitle||n.layoutProps.meta.title}),(0,e.jsx)(t.C,{nav:l.u,...n})]})}p.nav=l.u},49808:function(n,s,a){"use strict";a.d(s,{O:function(){return E}});var e,t=a(67294),o=a(12351),l=a(19946),p=a(32984),c=a(61363),i=a(84575),r=a(16723),u=a(23784),d=a(14157),k=a(3855),h=a(46045);function x({onFocus:n}){let[s,a]=(0,t.useState)(!0);return s?t.createElement(h._,{as:"button",type:"button",features:h.A.Focusable,onFocus:s=>{s.preventDefault();let e,t=50;e=requestAnimationFrame(function s(){if(t--<=0){e&&cancelAnimationFrame(e);return}if(n()){a(!1),cancelAnimationFrame(e);return}e=requestAnimationFrame(s)})}}):null}var m=a(73781),g=a(81021),f=((e=f||{})[e.SetSelectedIndex=0]="SetSelectedIndex",e[e.RegisterTab=1]="RegisterTab",e[e.UnregisterTab=2]="UnregisterTab",e[e.RegisterPanel=3]="RegisterPanel",e[e.UnregisterPanel=4]="UnregisterPanel",e);let y={0(n,s){let a=n.tabs.filter(n=>{var s;return!(null!=(s=n.current)&&s.hasAttribute("disabled"))});if(s.index<0)return{...n,selectedIndex:n.tabs.indexOf(a[0])};if(s.index>n.tabs.length)return{...n,selectedIndex:n.tabs.indexOf(a[a.length-1])};let e=n.tabs.slice(0,s.index),t=[...n.tabs.slice(s.index),...e].find(n=>a.includes(n));return t?{...n,selectedIndex:n.tabs.indexOf(t)}:n},1(n,s){var a;if(n.tabs.includes(s.tab))return n;let e=n.tabs[n.selectedIndex],t=(0,i.z2)([...n.tabs,s.tab],n=>n.current),o=null!=(a=t.indexOf(e))?a:n.selectedIndex;return -1===o&&(o=n.selectedIndex),{...n,tabs:t,selectedIndex:o}},2:(n,s)=>({...n,tabs:n.tabs.filter(n=>n!==s.tab)}),3:(n,s)=>n.panels.includes(s.panel)?n:{...n,panels:(0,i.z2)([...n.panels,s.panel],n=>n.current)},4:(n,s)=>({...n,panels:n.panels.filter(n=>n!==s.panel)})},j=(0,t.createContext)(null);function b(n){let s=(0,t.useContext)(j);if(null===s){let s=Error(`<${n} /> is missing a parent <Tab.Group /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(s,b),s}return s}j.displayName="TabsSSRContext";let w=(0,t.createContext)(null);function v(n){let s=(0,t.useContext)(w);if(null===s){let s=Error(`<${n} /> is missing a parent <Tab.Group /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(s,v),s}return s}w.displayName="TabsDataContext";let S=(0,t.createContext)(null);function T(n){let s=(0,t.useContext)(S);if(null===s){let s=Error(`<${n} /> is missing a parent <Tab.Group /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(s,T),s}return s}function C(n,s){return(0,p.E)(s.type,y,n,s)}S.displayName="TabsActionsContext";let N=t.Fragment,I=(0,o.yV)(function(n,s){let{defaultIndex:a=0,vertical:e=!1,manual:l=!1,onChange:p,selectedIndex:c=null,...i}=n,d=e?"vertical":"horizontal",h=l?"manual":"auto",m=null!==c,g=(0,u.T)(s),[f,y]=(0,t.useReducer)(C,{selectedIndex:null!=c?c:a,tabs:[],panels:[]}),b=(0,t.useMemo)(()=>({selectedIndex:f.selectedIndex}),[f.selectedIndex]),v=(0,k.E)(p||(()=>{})),T=(0,k.E)(f.tabs),I=(0,t.useMemo)(()=>({orientation:d,activation:h,...f}),[d,h,f]),P=(0,k.E)(m?n.selectedIndex:f.selectedIndex),_=(0,t.useMemo)(()=>({registerTab:n=>(y({type:1,tab:n}),()=>y({type:2,tab:n})),registerPanel:n=>(y({type:3,panel:n}),()=>y({type:4,panel:n})),change(n){P.current!==n&&v.current(n),m||y({type:0,index:n})}}),[y,m]);(0,r.e)(()=>{y({type:0,index:null!=c?c:a})},[c]);let L=(0,t.useRef)({tabs:[],panels:[]});return t.createElement(j.Provider,{value:L},t.createElement(S.Provider,{value:_},t.createElement(w.Provider,{value:I},I.tabs.length<=0&&t.createElement(x,{onFocus:()=>{var n,s;for(let a of T.current)if((null==(n=a.current)?void 0:n.tabIndex)===0)return null==(s=a.current)||s.focus(),!0;return!1}}),(0,o.sY)({ourProps:{ref:g},theirProps:i,slot:b,defaultTag:N,name:"Tabs"}))))}),P=(0,o.yV)(function(n,s){let{orientation:a,selectedIndex:e}=v("Tab.List"),t=(0,u.T)(s);return(0,o.sY)({ourProps:{ref:t,role:"tablist","aria-orientation":a},theirProps:n,slot:{selectedIndex:e},defaultTag:"div",name:"Tabs.List"})}),_=(0,o.yV)(function(n,s){var a,e;let k=`headlessui-tabs-tab-${(0,l.M)()}`,{orientation:h,activation:x,selectedIndex:f,tabs:y,panels:j}=v("Tab"),w=T("Tab"),S=b("Tab"),C=(0,t.useRef)(null),N=(0,u.T)(C,s);(0,r.e)(()=>w.registerTab(C),[w,C]);let I=S.current.tabs.indexOf(k);-1===I&&(I=S.current.tabs.push(k)-1);let P=y.indexOf(C);-1===P&&(P=I);let _=P===f,L=(0,m.z)(n=>{let s=y.map(n=>n.current).filter(Boolean);if(n.key===c.R.Space||n.key===c.R.Enter){n.preventDefault(),n.stopPropagation(),w.change(P);return}switch(n.key){case c.R.Home:case c.R.PageUp:return n.preventDefault(),n.stopPropagation(),(0,i.jA)(s,i.TO.First);case c.R.End:case c.R.PageDown:return n.preventDefault(),n.stopPropagation(),(0,i.jA)(s,i.TO.Last)}if((0,p.E)(h,{vertical:()=>n.key===c.R.ArrowUp?(0,i.jA)(s,i.TO.Previous|i.TO.WrapAround):n.key===c.R.ArrowDown?(0,i.jA)(s,i.TO.Next|i.TO.WrapAround):void 0,horizontal:()=>n.key===c.R.ArrowLeft?(0,i.jA)(s,i.TO.Previous|i.TO.WrapAround):n.key===c.R.ArrowRight?(0,i.jA)(s,i.TO.Next|i.TO.WrapAround):void 0}))return n.preventDefault()}),M=(0,m.z)(()=>{var n;null==(n=C.current)||n.focus()}),E=(0,t.useRef)(!1),O=(0,m.z)(()=>{var n;E.current||(E.current=!0,null==(n=C.current)||n.focus(),w.change(P),(0,g.Y)(()=>{E.current=!1}))}),R=(0,m.z)(n=>{n.preventDefault()}),A=(0,t.useMemo)(()=>({selected:_}),[_]),H={ref:N,onKeyDown:L,onFocus:"manual"===x?M:O,onMouseDown:R,onClick:O,id:k,role:"tab",type:(0,d.f)(n,C),"aria-controls":null==(e=null==(a=j[P])?void 0:a.current)?void 0:e.id,"aria-selected":_,tabIndex:_?0:-1};return(0,o.sY)({ourProps:H,theirProps:n,slot:A,defaultTag:"button",name:"Tabs.Tab"})}),L=(0,o.yV)(function(n,s){let{selectedIndex:a}=v("Tab.Panels"),e=(0,u.T)(s),l=(0,t.useMemo)(()=>({selectedIndex:a}),[a]);return(0,o.sY)({ourProps:{ref:e},theirProps:n,slot:l,defaultTag:"div",name:"Tabs.Panels"})}),M=o.AN.RenderStrategy|o.AN.Static,E=Object.assign(_,{Group:I,List:P,Panels:L,Panel:(0,o.yV)(function(n,s){var a,e,p,c;let{selectedIndex:i,tabs:d,panels:k}=v("Tab.Panel"),x=T("Tab.Panel"),m=b("Tab.Panel"),g=`headlessui-tabs-panel-${(0,l.M)()}`,f=(0,t.useRef)(null),y=(0,u.T)(f,s);(0,r.e)(()=>x.registerPanel(f),[x,f]);let j=m.current.panels.indexOf(g);-1===j&&(j=m.current.panels.push(g)-1);let w=k.indexOf(f);-1===w&&(w=j);let S=w===i,C=(0,t.useMemo)(()=>({selected:S}),[S]),N={ref:y,id:g,role:"tabpanel","aria-labelledby":null==(e=null==(a=d[w])?void 0:a.current)?void 0:e.id,tabIndex:S?0:-1};return S||null!=(p=n.unmount)&&!p||null!=(c=n.static)&&c?(0,o.sY)({ourProps:N,theirProps:n,slot:C,defaultTag:"div",features:M,visible:S,name:"Tabs.Panel"}):t.createElement(h._,{as:"span",...N})})})},11151:function(n,s,a){"use strict";a.d(s,{Zo:function(){return p},ah:function(){return o}});var e=a(67294);let t=e.createContext({});function o(n){let s=e.useContext(t);return e.useMemo(()=>"function"==typeof n?n(s):{...s,...n},[s,n])}let l={};function p({components:n,children:s,disableParentContext:a}){let p;return p=a?"function"==typeof n?n({}):n||l:o(n),e.createElement(t.Provider,{value:p},s)}}},function(n){n.O(0,[3430,7996,9495,224,7308,9774,2888,179],function(){return n(n.s=39115)}),_N_E=n.O()}]);