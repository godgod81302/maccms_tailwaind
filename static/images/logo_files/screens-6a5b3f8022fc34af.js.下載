(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8238],{29924:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/screens",function(){return a(17965)}])},17965:function(n,s,a){"use strict";a.r(s);var p=a(85893),t=a(11151),e=a(72788),o=a(36336),c=a(50224);let r=e.L,l=o.X_;function i(n){let s=Object.assign({p:"p",code:"code",a:"a",pre:"pre",hr:"hr"},(0,t.ah)(),n.components),{Editor:a}=s;return a||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Editor",!0),(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(c.X,{hidden:!0,level:2,id:"",children:"配置自定义屏幕"}),"\n",(0,p.jsxs)(s.p,{children:["你在 ",(0,p.jsx)(s.code,{children:"tailwind.config.js"})," 文件的 ",(0,p.jsx)(s.code,{children:"theme.screens"})," 部分定义项目的断点。键成为你的 ",(0,p.jsx)(s.a,{href:"/docs/responsive-design",children:"响应修饰符"}),"（如 ",(0,p.jsx)(s.code,{children:"md:text-center"}),"），值是断点应开始的 ",(0,p.jsx)(s.code,{children:"min-width"}),"。"]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5You define your project’s breakpoints in the ",(0,p.jsx)(s.code,{children:"theme.screens"})," section of your ",(0,p.jsx)(s.code,{children:"tailwind.config.js"})," file. The keys become your ",(0,p.jsx)(s.a,{href:"/docs/responsive-design",children:"responsive modifiers"})," (like ",(0,p.jsx)(s.code,{children:"md:text-center"}),"), and the values are the ",(0,p.jsx)(s.code,{children:"min-width"})," where that breakpoint should start."]}),"\n",(0,p.jsx)(s.p,{children:"默认断点的灵感来自于常见的设备分辨率："}),"\n",(0,p.jsx)(s.p,{children:"\xa5The default breakpoints are inspired by common device resolutions:"}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token string">\'640px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 640px) { ... }</span>\n\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token string">\'768px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 768px) { ... }</span>\n\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token string">\'1024px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1024px) { ... }</span>\n\n      <span class="token string-property property">\'xl\'</span><span class="token operator">:</span> <span class="token string">\'1280px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1280px) { ... }</span>\n\n      <span class="token string-property property">\'2xl\'</span><span class="token operator">:</span> <span class="token string">\'1536px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1536px) { ... }</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsx)(s.p,{children:"你可以随意拥有尽可能少或尽可能多的屏幕，以你喜欢的项目命名方式命名它们。"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Feel free to have as few or as many screens as you want, naming them in whatever way you’d prefer for your project."}),"\n",(0,p.jsx)("a",{id:"overriding-the-defaults"}),"\n",(0,p.jsx)(c.X,{level:3,id:"-1",children:"覆盖默认值"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Overriding the defaults"}),"\n",(0,p.jsxs)(s.p,{children:["要完全替换默认断点，请直接在 ",(0,p.jsx)(s.code,{children:"theme"})," 键下添加自定义 ",(0,p.jsx)(s.code,{children:"screens"})," 配置："]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5To completely replace the default breakpoints, add your custom ",(0,p.jsx)(s.code,{children:"screens"})," configuration directly under the ",(0,p.jsx)(s.code,{children:"theme"})," key:"]}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token string">\'576px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 576px) { ... }</span>\n\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token string">\'960px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 960px) { ... }</span>\n\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token string">\'1440px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1440px) { ... }</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsxs)(s.p,{children:["你尚未覆盖的任何默认屏幕（例如使用上述示例的 ",(0,p.jsx)(s.code,{children:"xl"}),"）都将被删除，并且不能用作屏幕修饰符。"]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5Any default screens you haven’t overridden (such as ",(0,p.jsx)(s.code,{children:"xl"})," using the above example) will be removed and will not be available as screen modifiers."]}),"\n",(0,p.jsx)("a",{id:"overriding-a-single-screen"}),"\n",(0,p.jsx)(c.X,{level:3,id:"-2",children:"覆盖单个屏幕"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Overriding a single screen"}),"\n",(0,p.jsxs)(s.p,{children:["要覆盖单个屏幕尺寸（如 ",(0,p.jsx)(s.code,{children:"lg"}),"），请在 ",(0,p.jsx)(s.code,{children:"theme.extend"})," 键下添加自定义 ",(0,p.jsx)(s.code,{children:"screens"})," 值："]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5To override a single screen size (like ",(0,p.jsx)(s.code,{children:"lg"}),"), add your custom ",(0,p.jsx)(s.code,{children:"screens"})," value under the ",(0,p.jsx)(s.code,{children:"theme.extend"})," key:"]}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token string">\'992px\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// => @media (min-width: 992px) { ... }</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsxs)(s.p,{children:["这将用相同的名称替换默认的 ",(0,p.jsx)(s.code,{children:"screens"})," 值，而不更改断点的顺序。"]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5This will replace the default ",(0,p.jsx)(s.code,{children:"screens"})," value with the same name, without changing the order of your breakpoints."]}),"\n",(0,p.jsx)("a",{id:"adding-larger-breakpoints"}),"\n",(0,p.jsx)(c.X,{level:3,id:"-3",children:"添加更大的断点"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Adding larger breakpoints"}),"\n",(0,p.jsxs)(s.p,{children:["添加额外的更大断点的最简单方法是使用 ",(0,p.jsx)(s.code,{children:"extend"})," 键："]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5The easiest way to add an additional larger breakpoint is using the ",(0,p.jsx)(s.code,{children:"extend"})," key:"]}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'3xl\'</span><span class="token operator">:</span> <span class="token string">\'1600px\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsx)(s.p,{children:"这会将你的自定义屏幕添加到默认断点列表的末尾。"}),"\n",(0,p.jsx)(s.p,{children:"\xa5This will add your custom screen to the end of the default breakpoint list."}),"\n",(0,p.jsx)("a",{id:"adding-smaller-breakpoints"}),"\n",(0,p.jsx)(c.X,{level:3,id:"-4",children:"添加较小的断点"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Adding smaller breakpoints"}),"\n",(0,p.jsxs)(s.p,{children:["如果要添加额外的小断点，则不能使用 ",(0,p.jsx)(s.code,{children:"extend"}),"，因为小断点会添加到断点列表的末尾，并且断点需要从小到大排序才能按预期工作 -宽度断点系统。"]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5If you want to add an additional small breakpoint, you can’t use ",(0,p.jsx)(s.code,{children:"extend"})," because the small breakpoint would be added to the end of the breakpoint list, and breakpoints need to be sorted from smallest to largest in order to work as expected with a min-width breakpoint system."]}),"\n",(0,p.jsxs)(s.p,{children:["相反，覆盖整个 ",(0,p.jsx)(s.code,{children:"screens"})," 键，重新指定默认断点："]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5Instead, override the entire ",(0,p.jsx)(s.code,{children:"screens"})," key, re-specifying the default breakpoints:"]}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> defaultTheme <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/defaultTheme\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'xs\'</span><span class="token operator">:</span> <span class="token string">\'475px\'</span><span class="token punctuation">,</span>\n      <span class="token spread operator">...</span>defaultTheme<span class="token punctuation">.</span><span class="token property-access">screens</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsxs)(s.p,{children:["我们在 ",(0,p.jsx)(s.code,{children:"tailwindcss/defaultTheme"})," 公开默认主题，因此你不必自己维护默认断点列表。"]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5We expose the default theme at ",(0,p.jsx)(s.code,{children:"tailwindcss/defaultTheme"})," so you don’t have to maintain the list of default breakpoints yourself."]}),"\n",(0,p.jsx)("a",{id:"using-custom-screen-names"}),"\n",(0,p.jsx)(c.X,{level:3,id:"-5",children:"使用自定义屏幕名称"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Using custom screen names"}),"\n",(0,p.jsxs)(s.p,{children:["你可以根据自己的喜好命名自定义屏幕，并且不限于遵循 Tailwind 默认使用的 ",(0,p.jsx)(s.code,{children:"sm"}),"/",(0,p.jsx)(s.code,{children:"md"}),"/",(0,p.jsx)(s.code,{children:"lg"}),"/",(0,p.jsx)(s.code,{children:"xl"}),"/",(0,p.jsx)(s.code,{children:"2xl"})," 约定。"]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5You can name your custom screens whatever you like, and are not limited to following the ",(0,p.jsx)(s.code,{children:"sm"}),"/",(0,p.jsx)(s.code,{children:"md"}),"/",(0,p.jsx)(s.code,{children:"lg"}),"/",(0,p.jsx)(s.code,{children:"xl"}),"/",(0,p.jsx)(s.code,{children:"2xl"}),"  convention that Tailwind uses by default."]}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'tablet\'</span><span class="token operator">:</span> <span class="token string">\'640px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 640px) { ... }</span>\n\n      <span class="token string-property property">\'laptop\'</span><span class="token operator">:</span> <span class="token string">\'1024px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1024px) { ... }</span>\n\n      <span class="token string-property property">\'desktop\'</span><span class="token operator">:</span> <span class="token string">\'1280px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1280px) { ... }</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsx)(s.p,{children:"你的响应修饰符将反映这些自定义屏幕名称，因此在你的 HTML 中使用它们现在看起来像这样："}),"\n",(0,p.jsx)(s.p,{children:"\xa5Your responsive modifiers will reflect these custom screen names, so using them in your HTML would now look like this:"}),"\n",(0,p.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid grid-cols-1 <span class="code-highlight bg-code-highlight">tablet</span>:grid-cols-2 <span class="code-highlight bg-code-highlight">laptop</span>:grid-cols-3 <span class="code-highlight bg-code-highlight">desktop</span>:grid-cols-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- ... --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,p.jsx)(s.hr,{}),"\n",(0,p.jsx)("a",{id:"advanced-configuration"}),"\n",(0,p.jsx)(c.X,{level:2,id:"-6",children:"高级配置"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Advanced configuration"}),"\n",(0,p.jsxs)(s.p,{children:["默认情况下，断点是最小宽度以鼓励 ",(0,p.jsx)(s.a,{href:"/docs/responsive-design#working-mobile-first",children:"mobile-first"})," 工作流程。如果你需要对媒体查询进行更多控制，你还可以使用对象语法来定义它们，该语法允许你指定明确的最小宽度和最大宽度值。"]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5By default, breakpoints are min-width to encourage a ",(0,p.jsx)(s.a,{href:"/docs/responsive-design#working-mobile-first",children:"mobile-first"})," workflow. If you need more control over your media queries, you can also define them using an object syntax that lets you specify explicit min-width and max-width values."]}),"\n",(0,p.jsx)("a",{id:"max-width-breakpoints"}),"\n",(0,p.jsx)(c.X,{level:3,id:"-7",children:"最大宽度断点"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Max-width breakpoints"}),"\n",(0,p.jsxs)(s.p,{children:["如果你想使用最大宽度断点而不是最小宽度断点，你可以使用 ",(0,p.jsx)(s.code,{children:"max"})," 键将屏幕指定为对象："]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5If you want to work with max-width breakpoints instead of min-width, you can specify your screens as objects with a ",(0,p.jsx)(s.code,{children:"max"})," key:"]}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'2xl\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1535px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 1535px) { ... }</span>\n\n      <span class="token string-property property">\'xl\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1279px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 1279px) { ... }</span>\n\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1023px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 1023px) { ... }</span>\n\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'767px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 767px) { ... }</span>\n\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'639px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 639px) { ... }</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsx)(s.p,{children:"确保按降序列出最大宽度断点，以便它们按预期相互覆盖。"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Make sure to list max-width breakpoints in descending order so that they override each other as expected."}),"\n",(0,p.jsx)("a",{id:"fixed-range-breakpoints"}),"\n",(0,p.jsx)(c.X,{level:3,id:"-8",children:"固定范围断点"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Fixed-range breakpoints"}),"\n",(0,p.jsxs)(s.p,{children:["如果你希望断点同时指定 ",(0,p.jsx)(s.code,{children:"min-width"})," 和 ",(0,p.jsx)(s.code,{children:"max-width"}),"，请同时使用 ",(0,p.jsx)(s.code,{children:"min"})," 和 ",(0,p.jsx)(s.code,{children:"max"})," 键："]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5If you want your breakpoints to specify both a ",(0,p.jsx)(s.code,{children:"min-width"})," and a ",(0,p.jsx)(s.code,{children:"max-width"}),", use the ",(0,p.jsx)(s.code,{children:"min"})," and ",(0,p.jsx)(s.code,{children:"max"})," keys together:"]}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'640px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'767px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 640px and max-width: 767px) { ... }</span>\n\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'768px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1023px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 768px and max-width: 1023px) { ... }</span>\n\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'1024px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1279px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1024px and max-width: 1279px) { ... }</span>\n\n      <span class="token string-property property">\'xl\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'1280px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1535px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1280px and max-width: 1535px) { ... }</span>\n\n      <span class="token string-property property">\'2xl\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'1536px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1536px) { ... }</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsx)(s.p,{children:"与常规的最小宽度或最大宽度断点不同，以这种方式定义的断点只有在视口大小明确在定义范围内时才会生效。"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Unlike regular min-width or max-width breakpoints, breakpoints defined this way will only take effect when the viewport size is explicitly within the defined range."}),"\n",(0,p.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>md:text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  This text will be centered on medium screens, but revert back\n  to the default (left-aligned) at all other screen sizes.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,p.jsx)("a",{id:"multi-range-breakpoints"}),"\n",(0,p.jsx)(c.X,{level:3,id:"-9",children:"多范围断点"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Multi-range breakpoints"}),"\n",(0,p.jsx)(s.p,{children:"有时将单个断点定义应用于多个范围可能很有用。"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Sometimes it can be useful to have a single breakpoint definition apply in multiple ranges."}),"\n",(0,p.jsx)(s.p,{children:"例如，假设你有一个侧边栏并希望你的断点基于内容区域宽度而不是整个视口。当侧边栏变得可见并缩小内容区域时，你可以通过让你的断点之一回落到较小的断点来模拟这一点："}),"\n",(0,p.jsx)(s.p,{children:"\xa5For example, say you have a sidebar and want your breakpoints to be based on the content-area width rather than the entire viewport. You can simulate this by having one of your breakpoints fall back to a smaller breakpoint when the sidebar becomes visible and shrinks the content area:"}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token string">\'500px\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token comment">// Sidebar appears at 768px, so revert to `sm:` styles between 768px</span>\n        <span class="token comment">// and 868px, after which the main content area is wide enough again to</span>\n        <span class="token comment">// apply the `md:` styles.</span>\n        <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'668px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'767px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'868px\'</span><span class="token punctuation">}</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token string">\'1100px\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'xl\'</span><span class="token operator">:</span> <span class="token string">\'1400px\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsx)("a",{id:"custom-media-queries"}),"\n",(0,p.jsx)(c.X,{level:3,id:"-10",children:"自定义媒体查询"}),"\n",(0,p.jsx)(s.p,{children:"\xa5Custom media queries"}),"\n",(0,p.jsxs)(s.p,{children:["如果你想完全控制生成的媒体查询，请使用 ",(0,p.jsx)(s.code,{children:"raw"})," 键："]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5If you want full control over the generated media query, use the ",(0,p.jsx)(s.code,{children:"raw"})," key:"]}),"\n",(0,p.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'tall\'</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">\'raw\'</span><span class="token operator">:</span> <span class="token string">\'(min-height: 800px)\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">// => @media (min-height: 800px) { ... }</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,p.jsxs)(s.p,{children:["使用 ",(0,p.jsx)(s.code,{children:"raw"})," 键定义的媒体查询将按原样输出，而 ",(0,p.jsx)(s.code,{children:"min"})," 和 ",(0,p.jsx)(s.code,{children:"max"})," 键将被忽略。"]}),"\n",(0,p.jsxs)(s.p,{children:["\xa5Media queries defined using the ",(0,p.jsx)(s.code,{children:"raw"})," key will be output as-is, and the ",(0,p.jsx)(s.code,{children:"min"})," and ",(0,p.jsx)(s.code,{children:"max"})," keys will be ignored."]})]})}function u(n={}){return(0,p.jsx)(l,Object.assign({},n,{children:(0,p.jsx)(i,n)}))}s.default=u,u.layoutProps={Layout:r,meta:{title:"自定义屏幕",shortTitle:"屏幕",description:"为你的项目自定义默认断点。"},slug:"screens",tableOfContents:[{title:"配置自定义屏幕",slug:"",children:[{title:"覆盖默认值",slug:"-1",children:[]},{title:"覆盖单个屏幕",slug:"-2",children:[]},{title:"添加更大的断点",slug:"-3",children:[]},{title:"添加较小的断点",slug:"-4",children:[]},{title:"使用自定义屏幕名称",slug:"-5",children:[]}]},{title:"高级配置",slug:"-6",children:[{title:"最大宽度断点",slug:"-7",children:[]},{title:"固定范围断点",slug:"-8",children:[]},{title:"多范围断点",slug:"-9",children:[]},{title:"自定义媒体查询",slug:"-10",children:[]}]}]}},72788:function(n,s,a){"use strict";a.d(s,{L:function(){return c}});var p=a(85893),t=a(97903),e=a(77929),o=a(87308);function c(n){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(e.Dx,{children:n.layoutProps.meta.metaTitle||n.layoutProps.meta.title}),(0,p.jsx)(t.C,{nav:o.u,...n})]})}c.nav=o.u},11151:function(n,s,a){"use strict";a.d(s,{Zo:function(){return c},ah:function(){return e}});var p=a(67294);let t=p.createContext({});function e(n){let s=p.useContext(t);return p.useMemo(()=>"function"==typeof n?n(s):{...s,...n},[s,n])}let o={};function c({components:n,children:s,disableParentContext:a}){let c;return c=a?"function"==typeof n?n({}):n||o:e(n),p.createElement(t.Provider,{value:c},s)}}},function(n){n.O(0,[3430,7996,9495,224,7308,9774,2888,179],function(){return n(n.s=29924)}),_N_E=n.O()}]);