(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7787],{97813:function(n,a,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/upgrade-guide",function(){return s(25085)}])},25085:function(n,a,s){"use strict";s.r(a);var e=s(85893),t=s(11151),p=s(72788),l=s(36336);let o=p.L,c=l.X_;function i(n){let a=Object.assign({p:"p",a:"a",hr:"hr",pre:"pre",code:"code",em:"em",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,t.ah)(),n.components),{Heading:s,Editor:p}=a;return p||d("Editor",!0),s||d("Heading",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.p,{children:"Tailwind CSS v3.0 是对该框架的重大更新，具有全新的内部引擎，因此包含少量重大更改。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Tailwind CSS v3.0 is a major update to the framework with a brand new internal engine and as such includes a small number of breaking changes."}),"\n",(0,e.jsx)(a.p,{children:"我们非常重视稳定性，并努力使任何重大更改尽可能轻松。对于大多数项目，升级到 Tailwind CSS v3.0 应该不到 30 分钟。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5We take stability very seriously and have worked hard to make any breaking changes as painless as possible. For most projects, upgrading to Tailwind CSS v3.0 should take less than 30 minutes."}),"\n",(0,e.jsx)(a.p,{children:(0,e.jsx)(a.a,{href:"https://www.youtube.com/embed/waoOK5s9ypc",children:"https://www.youtube.com/embed/waoOK5s9ypc"})}),"\n",(0,e.jsxs)(a.p,{children:["要详细了解 Tailwind CSS v3.0 中的新功能，请阅读我们博客上的 ",(0,e.jsx)(a.a,{href:"/blog/tailwindcss-v3",children:"Tailwind CSS v3.0 公告"}),"。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5To learn more about what’s new in Tailwind CSS v3.0, read the ",(0,e.jsx)(a.a,{href:"/blog/tailwindcss-v3",children:"Tailwind CSS v3.0 announcement"})," on our blog."]}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)("a",{id:"upgrade-packages"}),"\n",(0,e.jsx)(s,{level:2,id:"",children:"升级包"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Upgrade packages"}),"\n",(0,e.jsx)(a.p,{children:"使用 npm 更新 Tailwind，以及 PostCSS 和 autoprefixer："}),"\n",(0,e.jsx)(a.p,{children:"\xa5Update Tailwind, as well as PostCSS and autoprefixer, using npm:"}),"\n",(0,e.jsx)(a.pre,{className:"language-shell",dangerouslySetInnerHTML:{__html:'<code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> tailwindcss@latest postcss@latest autoprefixer@latest</code>'}}),"\n",(0,e.jsxs)(a.p,{children:["请注意，Tailwind CSS v3.0 需要 PostCSS 8，不再支持 PostCSS 7。如果你无法升级到 PostCSS 8，我们建议你使用 ",(0,e.jsx)(a.a,{href:"/docs/installation",children:"Tailwind CLI"})," 而不是安装 Tailwind 作为 PostCSS 插件。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Note that Tailwind CSS v3.0 requires PostCSS 8, and no longer supports PostCSS 7. If you can’t upgrade to PostCSS 8, we recommend using ",(0,e.jsx)(a.a,{href:"/docs/installation",children:"Tailwind CLI"})," instead of installing Tailwind as a PostCSS plugin."]}),"\n",(0,e.jsxs)(a.p,{children:["如果你在自定义 CSS 中使用嵌套（结合 PostCSS 嵌套插件），你还应该在 PostCSS 配置中使用 ",(0,e.jsxs)(a.a,{href:"/docs/using-with-preprocessors#nesting",children:["配置 ",(0,e.jsx)(a.code,{children:"tailwindcss/nesting"})," 插件"]})," 以确保与 Tailwind CSS v3.0 兼容。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5If you are using nesting in your custom CSS (in combination with a PostCSS nesting plugin), you should also ",(0,e.jsxs)(a.a,{href:"/docs/using-with-preprocessors#nesting",children:["configure the ",(0,e.jsx)(a.code,{children:"tailwindcss/nesting"})," plugin"]})," in your PostCSS configuration to ensure compatibility with Tailwind CSS v3.0."]}),"\n",(0,e.jsx)("a",{id:"official-plugins"}),"\n",(0,e.jsx)(s,{level:3,id:"-1",children:"官方插件"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Official plugins"}),"\n",(0,e.jsx)(a.p,{children:"我们所有的第一方插件都已更新以兼容 v3.0。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5All of our first-party plugins have been updated for compatibility with v3.0."}),"\n",(0,e.jsx)(a.p,{children:"如果你正在使用我们的任何插件，请确保同时将它们全部更新到最新版本以避免版本约束错误。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5If you’re using any of our plugins, make sure to update them all to the latest version at the same time to avoid version constraint errors."}),"\n",(0,e.jsx)(a.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html">npm install -D tailwindcss@latest \\\n  <span class="code-highlight bg-code-highlight">@tailwindcss/typography@latest</span> \\\n  <span class="code-highlight bg-code-highlight">@tailwindcss/forms@latest</span> \\\n  <span class="code-highlight bg-code-highlight">@tailwindcss/aspect-ratio@latest</span> \\\n  <span class="code-highlight bg-code-highlight">@tailwindcss/line-clamp@latest</span> \\\n  postcss@latest \\\n  autoprefixer@latest</code>'}}),"\n",(0,e.jsx)("a",{id:"play-cdn"}),"\n",(0,e.jsx)(s,{level:3,id:"cdn",children:"体验 CDN"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Play CDN"}),"\n",(0,e.jsxs)(a.p,{children:["对于 Tailwind CSS v3.0，我们过去提供的基于 CSS 的 CDN 构建已被新的 ",(0,e.jsx)(a.a,{href:"/docs/installation/play-cdn",children:"体验 CDN"})," 取代，它让你无需构建步骤即可在浏览器中获得新引擎的全部功能。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5For Tailwind CSS v3.0, the CSS-based CDN build we’ve offered in the past has been replaced by the new ",(0,e.jsx)(a.a,{href:"/docs/installation/play-cdn",children:"Play CDN"}),", which gives you the full power of the new engine right in the browser with no build step."]}),"\n",(0,e.jsxs)(a.p,{children:["要尝试一下，请将此 ",(0,e.jsx)(a.code,{children:"<script>"})," 标签放入你的 ",(0,e.jsx)(a.code,{children:"<head>"})," 中："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5To try it out, throw this ",(0,e.jsx)(a.code,{children:"<script>"})," tag in your ",(0,e.jsx)(a.code,{children:"<head>"}),":"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html unchanged"><span class="token doctype punctuation">&lt;!</span><span class="token doctype doctype-tag">DOCTYPE</span><span class="token doctype"> </span><span class="token doctype name">html</span><span class="token doctype punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">html</span><span class="token tag"> </span><span class="token tag attr-name">lang</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">en</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;</span><span class="token tag">head</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">meta</span><span class="token tag"> </span><span class="token tag attr-name">charset</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">utf-8</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">meta</span><span class="token tag"> </span><span class="token tag attr-name">name</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">viewport</span><span class="token tag attr-value punctuation">"</span><span class="token tag"> </span><span class="token tag attr-name">content</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">width=device-width, initial-scale=1.0</span><span class="token tag attr-value punctuation">"</span><span class="token tag"> </span><span class="token tag punctuation">/></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">title</span><span class="token tag punctuation">></span><span class="token plain">Example</span><span class="token tag punctuation">&lt;/</span><span class="token tag">title</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">script</span><span class="token tag"> </span><span class="token tag attr-name">src</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">https://cdn.tailwindcss.com</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token script"></span><span class="token tag punctuation">&lt;/</span><span class="token tag">script</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;/</span><span class="token tag">head</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;</span><span class="token tag">body</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token comment">&lt;!-- --></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;/</span><span class="token tag">body</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain"></span><span class="token tag punctuation">&lt;/</span><span class="token tag">html</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"Play CDN 专为开发目的而设计 - 编译你自己的静态 CSS 构建是生产中更好的选择。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5The Play CDN is designed for development purposes only — compiling your own static CSS build is a much better choice in production."}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)("a",{id:"migrating-to-the-jit-engine"}),"\n",(0,e.jsx)(s,{level:2,id:"jit",children:"迁移到 JIT 引擎"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Migrating to the JIT engine"}),"\n",(0,e.jsxs)(a.p,{children:["我们在 3 月份宣布的新 ",(0,e.jsx)(a.a,{href:"/blog/just-in-time-the-next-generation-of-tailwind-css",children:"即时引擎"})," 已经取代了 Tailwind CSS v3.0 中的经典引擎。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5The new ",(0,e.jsx)(a.a,{href:"/blog/just-in-time-the-next-generation-of-tailwind-css",children:"Just-in-Time engine"})," we announced in March has replaced the classic engine in Tailwind CSS v3.0."]}),"\n",(0,e.jsx)(a.p,{children:"新引擎会按需生成你的项目所需的样式，并且可能需要对你的项目进行一些小的更改，具体取决于你如何配置 Tailwind。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5The new engine generates the styles you need for your project on-demand, and might necessitate some small changes to your project depending on how you have Tailwind configured."}),"\n",(0,e.jsxs)(a.p,{children:["如果你已经在 Tailwind CSS v2.x 中选择加入 ",(0,e.jsx)(a.code,{children:"mode: 'jit'"}),"，则可以安全地将其从 v3.0 中的配置中删除："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5If you were already opting in to ",(0,e.jsx)(a.code,{children:"mode: 'jit'"})," in Tailwind CSS v2.x, you can safely remove that from your configuration in v3.0:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'jit\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)("a",{id:"configure-content-sources"}),"\n",(0,e.jsx)(s,{level:3,id:"-2",children:"配置内容源"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Configure content sources"}),"\n",(0,e.jsxs)(a.p,{children:["由于 Tailwind 不再在后台使用 PurgeCSS，我们已将 ",(0,e.jsx)(a.code,{children:"purge"})," 选项重命名为 ",(0,e.jsx)(a.code,{children:"content"})," 以更好地反映它的用途："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Since Tailwind no longer uses PurgeCSS under the hood, we’ve renamed the ",(0,e.jsx)(a.code,{children:"purge"})," option to ",(0,e.jsx)(a.code,{children:"content"})," to better reflect what it’s for:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">purge</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">  </span><span class="token literal-property property">content</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token comment">// Example content paths...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token string">\'./public/**/*.html\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token string">\'./src/**/*.{js,jsx,ts,tsx,vue}\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsxs)(a.p,{children:["如果你尚未在项目中使用 ",(0,e.jsx)(a.code,{children:"purge"})," 选项，那么现在配置模板路径至关重要，否则编译后的 CSS 将为空。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5If you weren’t already using the ",(0,e.jsx)(a.code,{children:"purge"})," option in your project, it’s crucial that you configure your template paths now or your compiled CSS will be empty."]}),"\n",(0,e.jsxs)(a.p,{children:["由于我们不再在后台使用 PurgeCSS，一些高级清除选项已经更改。有关高级选项的更多信息，请参阅新的 ",(0,e.jsx)(a.a,{href:"/docs/content-configuration",children:"内容配置"})," 文档。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Since we’re not using PurgeCSS under the hood anymore, some of the advanced purge options have changed. See the new ",(0,e.jsx)(a.a,{href:"/docs/content-configuration",children:"content configuration"})," documentation for more information on advanced options."]}),"\n",(0,e.jsx)("a",{id:"remove-dark-mode-configuration"}),"\n",(0,e.jsx)(s,{level:3,id:"-3",children:"删除夜间模式配置"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Remove dark mode configuration"}),"\n",(0,e.jsxs)(a.p,{children:["夜间模式功能现在默认使用 ",(0,e.jsx)(a.code,{children:"media"})," 策略启用，因此你可以从 ",(0,e.jsx)(a.code,{children:"tailwind.config.js"})," 文件中完全删除此密钥，除非你使用 ",(0,e.jsx)(a.code,{children:"class"})," 策略。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5The dark mode feature is now enabled using the ",(0,e.jsx)(a.code,{children:"media"})," strategy by default, so you can remove this key entirely from your ",(0,e.jsx)(a.code,{children:"tailwind.config.js"})," file, ",(0,e.jsx)(a.em,{children:"unless"})," you’re using the ",(0,e.jsx)(a.code,{children:"class"})," strategy."]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">darkMode</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'media\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsxs)(a.p,{children:["如果它当前设置为 ",(0,e.jsx)(a.code,{children:"false"}),"，你也可以安全地删除它："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5You can also safely remove this key if it’s currently set to ",(0,e.jsx)(a.code,{children:"false"}),":"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">darkMode</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)("a",{id:"remove-variant-configuration"}),"\n",(0,e.jsx)(s,{level:3,id:"-4",children:"删除变体配置"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Remove variant configuration"}),"\n",(0,e.jsxs)(a.p,{children:["在 Tailwind CSS v3.0 中，默认情况下每个变体都自动可用于每个工具，因此你可以从 ",(0,e.jsx)(a.code,{children:"tailwind.config.js"})," 文件中删除 ",(0,e.jsx)(a.code,{children:"variants"})," 部分："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5In Tailwind CSS v3.0, every variant is automatically available for every utility by default, so you can remove the ",(0,e.jsx)(a.code,{children:"variants"})," section from your ",(0,e.jsx)(a.code,{children:"tailwind.config.js"})," file:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">variants</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">    </span><span class="token literal-property property">extend</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">      </span><span class="token literal-property property">padding</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string">\'hover\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)("a",{id:"replace-variants-with-layer"}),"\n",(0,e.jsx)(s,{level:3,id:"layer-variants",children:"使用 @layer 替换 @variants"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Replace @variants with @layer"}),"\n",(0,e.jsxs)(a.p,{children:["由于现在默认启用所有变体，因此你不再需要使用 ",(0,e.jsx)(a.code,{children:"@variants"})," 或 ",(0,e.jsx)(a.code,{children:"@responsive"})," 指令为自定义 CSS 显式启用这些变体。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Since all variants are now enabled by default, you no longer need to explicitly enable these for custom CSS using the ",(0,e.jsx)(a.code,{children:"@variants"})," or ",(0,e.jsx)(a.code,{children:"@responsive"})," directives."]}),"\n",(0,e.jsxs)(a.p,{children:["相反，使用 ",(0,e.jsx)(a.code,{children:"@layer"})," 指令将任何自定义 CSS 添加到适当的 “layer”："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Instead, add any custom CSS to appropriate “layer” using the ",(0,e.jsx)(a.code,{children:"@layer"})," directive:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-css",dangerouslySetInnerHTML:{__html:'<code class="language-diff-css"><span class="token language-css deleted"><span class="token plain"> </span><span class="token atrule rule">@variants</span><span class="token atrule"> hover</span><span class="token atrule punctuation">,</span><span class="token atrule"> focus</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-css inserted"><span class="token plain"> </span><span class="token atrule rule">@layer</span><span class="token atrule"> utilities</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain">   </span><span class="token selector class">.content-auto</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain">     </span><span class="token property">content-visibility</span><span class="token punctuation">:</span><span class="token plain"> auto</span><span class="token punctuation">;</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain">   </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain"> </span><span class="token punctuation">}</span>\n</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"添加到 Tailwind 层之一的任何自定义 CSS 将自动支持变体。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Any custom CSS added to one of Tailwind’s layers will automatically support variants."}),"\n",(0,e.jsxs)(a.p,{children:["有关详细信息，请参阅 ",(0,e.jsx)(a.a,{href:"/docs/adding-custom-styles#using-css-and-layer",children:"使用 CSS 和 @layer 添加自定义样式"})," 上的文档。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5See the documentation on ",(0,e.jsx)(a.a,{href:"/docs/adding-custom-styles#using-css-and-layer",children:"adding custom styles using CSS and @layer"})," for more information."]}),"\n",(0,e.jsx)("a",{id:"automatic-transforms-and-filters"}),"\n",(0,e.jsx)(s,{level:3,id:"-5",children:"自动转换和过滤"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Automatic transforms and filters"}),"\n",(0,e.jsxs)(a.p,{children:["在 Tailwind CSS v3.0 中，",(0,e.jsx)(a.code,{children:"scale-50"})," 和 ",(0,e.jsx)(a.code,{children:"brightness-75"})," 等转换和过滤工具将自动生效，无需添加 ",(0,e.jsx)(a.code,{children:"transform"}),"、",(0,e.jsx)(a.code,{children:"filter"})," 或 ",(0,e.jsx)(a.code,{children:"backdrop-filter"})," 类："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5In Tailwind CSS v3.0, transform and filter utilities like ",(0,e.jsx)(a.code,{children:"scale-50"})," and ",(0,e.jsx)(a.code,{children:"brightness-75"})," will automatically take effect without needing to add the ",(0,e.jsx)(a.code,{children:"transform"}),", ",(0,e.jsx)(a.code,{children:"filter"}),", or ",(0,e.jsx)(a.code,{children:"backdrop-filter"})," classes:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">transform scale-50 filter grayscale backdrop-filter backdrop-blur-sm</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">scale-50 grayscale backdrop-blur-sm</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["虽然将它们保留在 HTML 中并没有什么坏处，但可以安全地将它们删除 - 但有一个例外。如果你依赖 ",(0,e.jsx)(a.code,{children:"transform"})," 创建新的堆叠上下文，你可能想要保留它，否则你可能会遇到 z 顺序问题。或者，将其替换为 ",(0,e.jsx)(a.code,{children:"relative"})," 或 ",(0,e.jsx)(a.code,{children:"isolate"})," 以强制使用新的堆栈上下文。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5While there’s no harm in leaving them in your HTML, they can safely be removed — with one exception. If you’re relying on ",(0,e.jsx)(a.code,{children:"transform"})," to create a new stacking context, you may want to leave it, otherwise you may run into z-order issues. Alternatively, replace it with ",(0,e.jsx)(a.code,{children:"relative"})," or ",(0,e.jsx)(a.code,{children:"isolate"})," to force a new stacking context."]}),"\n",(0,e.jsx)("a",{id:"new-opacity-modifier-syntax"}),"\n",(0,e.jsx)(s,{level:3,id:"-6",children:"新的透明度修饰符语法"}),"\n",(0,e.jsx)(a.p,{children:"\xa5New opacity modifier syntax"}),"\n",(0,e.jsxs)(a.p,{children:["新引擎引入了 ",(0,e.jsx)(a.a,{href:"/docs/background-color#changing-the-opacity",children:"新语法"}),"，用于更改我们建议从 ",(0,e.jsx)(a.code,{children:"bg-opacity-*"})," 等工具迁移到的颜色工具的透明度："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5The new engine introduces ",(0,e.jsx)(a.a,{href:"/docs/background-color#changing-the-opacity",children:"a new syntax"})," for changing the opacity of color utilities that we recommend migrating to from utilities like ",(0,e.jsx)(a.code,{children:"bg-opacity-*"}),":"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">bg-black bg-opacity-25</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">bg-black/25</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["旧方法在所有情况下仍然有效，除了使用具有默认 ",(0,e.jsx)(a.code,{children:"border"})," 类的 ",(0,e.jsx)(a.code,{children:"border-opacity-*"})," 工具时 - 在 v3 中，你需要显式指定边框颜色："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5The old approach still works in all cases except when using a ",(0,e.jsx)(a.code,{children:"border-opacity-*"})," utility with the default ",(0,e.jsx)(a.code,{children:"border"})," class — in v3 you’ll need to explicitly specify your border color:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">border border-opacity-25</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">border border-gray-200/25</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["其他所有情况的行为都相同，因此除了该更改之外，你的项目将完全像以前一样工作。不过，我们确实建议继续使用新语法，并计划在 v4 中默认禁用 ",(0,e.jsx)(a.code,{children:"border-opacity-*"})," 和 ",(0,e.jsx)(a.code,{children:"bg-opacity-*"})," 等工具，但你仍然可以在需要时启用它们。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Every other situation behaves the same, so aside from that change your projects will work exactly as they did before. We do recommend using the new syntax going forward though, and plan to disable utilities like ",(0,e.jsx)(a.code,{children:"border-opacity-*"})," and ",(0,e.jsx)(a.code,{children:"bg-opacity-*"})," by default in v4, though you will still be able to enable them if needed."]}),"\n",(0,e.jsxs)(a.p,{children:["这种新语法适用于所有颜色工具，甚至是过去无法更改透明度的工具，如 ",(0,e.jsx)(a.code,{children:"from-red-500/75"}),"。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5This new syntax works for all color utilities, even utilities that didn’t have any way to change the opacity in the past like ",(0,e.jsx)(a.code,{children:"from-red-500/75"}),"."]}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)("a",{id:"color-palette-changes"}),"\n",(0,e.jsx)(s,{level:2,id:"-7",children:"调色板变化"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Color palette changes"}),"\n",(0,e.jsx)(a.p,{children:"Tailwind CSS v3.0 现在默认包含扩展调色板中的每种颜色，包括以前禁用的颜色，如青色、玫瑰色、紫红色和石灰色，以及所有五种灰色变体。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Tailwind CSS v3.0 now includes every color from the extended color palette by default, including previously disabled colors like cyan, rose, fuchsia, and lime, and all five variations of gray."}),"\n",(0,e.jsx)("a",{id:"removed-color-aliases"}),"\n",(0,e.jsx)(s,{level:3,id:"-8",children:"删除了颜色别名"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Removed color aliases"}),"\n",(0,e.jsx)(a.p,{children:"在 v2.0 中，一些默认颜色实际上是扩展颜色的别名："}),"\n",(0,e.jsx)(a.p,{children:"\xa5In v2.0, several of the default colors were actually aliases for the extended colors:"}),"\n",(0,e.jsxs)(a.table,{children:[(0,e.jsx)(a.thead,{children:(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.th,{children:"v2 默认"}),(0,e.jsx)(a.th,{children:"v2 扩展"})]})}),(0,e.jsxs)(a.tbody,{children:[(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"green"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"emerald"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"yellow"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"amber"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"purple"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"violet"})})]})]})]}),"\n",(0,e.jsxs)(a.p,{children:["在 v3.0 中，这些颜色默认使用它们的扩展名称，因此以前的 ",(0,e.jsx)(a.code,{children:"bg-green-500"})," 现在是 ",(0,e.jsx)(a.code,{children:"bg-emerald-500"}),"，而 ",(0,e.jsx)(a.code,{children:"bg-green-500"})," 现在是指扩展调色板中的绿色。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5In v3.0, these colors use their extended names by default, so what was previously ",(0,e.jsx)(a.code,{children:"bg-green-500"})," is now ",(0,e.jsx)(a.code,{children:"bg-emerald-500"}),", and ",(0,e.jsx)(a.code,{children:"bg-green-500"})," now refers to the green from the extended palette."]}),"\n",(0,e.jsxs)(a.p,{children:["如果你在项目中使用这些颜色，最简单的升级方法是将它们别名改回它们在 ",(0,e.jsx)(a.code,{children:"tailwind.config.js"})," 文件中以前的名称："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5If you’re using these colors in your project, the simplest way to upgrade is to alias them back to their previous names in your ",(0,e.jsx)(a.code,{children:"tailwind.config.js"})," file:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token keyword">const</span><span class="token plain"> colors </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/colors\'</span><span class="token punctuation">)</span><span class="token plain"></span>\n</span><span class="token plain language-js unchanged">\n</span><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token literal-property property">extend</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">      </span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">        </span><span class="token literal-property property">green</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">emerald</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">        </span><span class="token literal-property property">yellow</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">amber</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">        </span><span class="token literal-property property">purple</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">violet</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"如果你已经在使用自定义调色板，则此更改不会对你产生任何影响。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5If you are already using a custom color palette, this change doesn’t impact you at all."}),"\n",(0,e.jsx)("a",{id:"renamed-gray-scales"}),"\n",(0,e.jsx)(s,{level:3,id:"-9",children:"重命名灰度"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Renamed gray scales"}),"\n",(0,e.jsx)(a.p,{children:"作为默认启用所有扩展颜色的一部分，我们为不同的灰色阴影提供了较短的单字名称，以使其更实用，并减少它们同时共存的尴尬。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5As part of enabling all of the extended colors by default, we’ve given the different gray shades shorter single-word names to make them more practical to use and make it less awkward for them to co-exist at the same time."}),"\n",(0,e.jsxs)(a.table,{children:[(0,e.jsx)(a.thead,{children:(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.th,{children:"v2 默认"}),(0,e.jsx)(a.th,{children:"v2 扩展"}),(0,e.jsx)(a.th,{children:"v3 统一"})]})}),(0,e.jsxs)(a.tbody,{children:[(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:"不适用"}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"blueGray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"slate"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"gray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"coolGray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"gray"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:"不适用"}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"gray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"zinc"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:"不适用"}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"trueGray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"neutral"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:"不适用"}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"warmGray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"stone"})})]})]})]}),"\n",(0,e.jsx)(a.p,{children:"如果你引用了任何扩展的灰色，你应该更新对新名称的引用，例如："}),"\n",(0,e.jsx)(a.p,{children:"\xa5If you were referencing any of the extended grays, you should update your references to the new names, for example:"}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token keyword">const</span><span class="token plain"> colors </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/colors\'</span><span class="token punctuation">)</span><span class="token plain"></span>\n</span><span class="token plain language-js unchanged">\n</span><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token literal-property property">extend</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">      </span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">        </span><span class="token literal-property property">gray</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">trueGray</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">        </span><span class="token literal-property property">gray</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">neutral</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"如果你没有引用扩展调色板中的任何灰色，则此更改根本不会影响你。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5If you weren’t referencing any of the grays from the extended color palette, this change doesn’t impact you at all."}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)("a",{id:"class-name-changes"}),"\n",(0,e.jsx)(s,{level:2,id:"-10",children:"类名称变更"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Class name changes"}),"\n",(0,e.jsx)(a.p,{children:"Tailwind CSS v3.0 中的一些类名已更改，以避免命名冲突、改善开发者体验或支持新功能。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Some class names in Tailwind CSS v3.0 have changed to avoid naming collisions, improve the developer experience, or make it possible to support new features."}),"\n",(0,e.jsx)(a.p,{children:"在可能的情况下，我们也保留了旧名称，因此其中许多更改都是非破坏性的，但我们鼓励你更新为新类名称。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Wherever possible we have preserved the old name as well so many of these changes are non-breaking, but you’re encouraged to update to the new class names."}),"\n",(0,e.jsx)("a",{id:"overflow-clipellipsis"}),"\n",(0,e.jsx)(s,{level:3,id:"overflow-clip-ellipsis",children:"overflow-clip/ellipsis"}),"\n",(0,e.jsxs)(a.p,{children:["那些该死的浏览器开发者添加了一个真正的 ",(0,e.jsx)(a.code,{children:"overflow: clip"})," 属性，所以现在将 ",(0,e.jsx)(a.code,{children:"overflow-clip"})," 用于 ",(0,e.jsx)(a.code,{children:"text-overflow: clip"})," 是一个非常糟糕的主意。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Those damn browser developers added a real ",(0,e.jsx)(a.code,{children:"overflow: clip"})," property, so using ",(0,e.jsx)(a.code,{children:"overflow-clip"})," for ",(0,e.jsx)(a.code,{children:"text-overflow: clip"})," is a really bad idea now."]}),"\n",(0,e.jsxs)(a.p,{children:["我们已将 ",(0,e.jsx)(a.code,{children:"overflow-clip"})," 重命名为 ",(0,e.jsx)(a.code,{children:"text-clip"}),"，并将 ",(0,e.jsx)(a.code,{children:"overflow-ellipsis"})," 重命名为 ",(0,e.jsx)(a.code,{children:"text-ellipsis"})," 以避免命名冲突："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5We’ve renamed ",(0,e.jsx)(a.code,{children:"overflow-clip"})," to ",(0,e.jsx)(a.code,{children:"text-clip"}),", and renamed ",(0,e.jsx)(a.code,{children:"overflow-ellipsis"})," to ",(0,e.jsx)(a.code,{children:"text-ellipsis"})," to avoid the naming collision:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">overflow-clip overflow-ellipsis</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">text-clip text-ellipsis</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["这极不可能影响任何人，因为 ",(0,e.jsx)(a.code,{children:"text-clip"})," 的用例很少，而且它只是为了完成才真正包含在内。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5This is extremely unlikely to affect anyone, as there are very few use-cases for ",(0,e.jsx)(a.code,{children:"text-clip"})," and it’s only really included for the sake of completion."]}),"\n",(0,e.jsx)("a",{id:"flex-growshrink"}),"\n",(0,e.jsx)(s,{level:3,id:"flex-grow-shrink",children:"flex-grow/shrink"}),"\n",(0,e.jsxs)(a.p,{children:["我们添加了 ",(0,e.jsx)(a.code,{children:"grow-*"})," 和 ",(0,e.jsx)(a.code,{children:"shrink-*"})," 作为 ",(0,e.jsx)(a.code,{children:"flex-grow-*"})," 和 ",(0,e.jsx)(a.code,{children:"flex-shrink-*"})," 的别名："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5We’ve added ",(0,e.jsx)(a.code,{children:"grow-*"})," and ",(0,e.jsx)(a.code,{children:"shrink-*"})," as aliases for ",(0,e.jsx)(a.code,{children:"flex-grow-*"})," and ",(0,e.jsx)(a.code,{children:"flex-shrink-*"}),":"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">flex-grow-0 flex-shrink</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">grow-0 shrink</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"旧的类名将始终有效，但我们鼓励你更新为新的类名。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5The old class names will always work but you’re encouraged to update to the new ones."}),"\n",(0,e.jsx)("a",{id:"outline-blackwhite"}),"\n",(0,e.jsx)(s,{level:3,id:"outline-black-white",children:"outline-black/white"}),"\n",(0,e.jsxs)(a.p,{children:["由于浏览器在渲染轮廓时终于开始考虑边框半径，我们为 ",(0,e.jsx)(a.code,{children:"outline-style"}),"、",(0,e.jsx)(a.code,{children:"outline-color"}),"、",(0,e.jsx)(a.code,{children:"outline-width"})," 和 ",(0,e.jsx)(a.code,{children:"outline-offset"})," 属性添加了单独的工具。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Since browsers are finally starting to respect border radius when rendering outlines, we’ve added separate utilities for the ",(0,e.jsx)(a.code,{children:"outline-style"}),", ",(0,e.jsx)(a.code,{children:"outline-color"}),", ",(0,e.jsx)(a.code,{children:"outline-width"})," and ",(0,e.jsx)(a.code,{children:"outline-offset"})," properties."]}),"\n",(0,e.jsxs)(a.p,{children:["这意味着 ",(0,e.jsx)(a.code,{children:"outline-white"})," 和 ",(0,e.jsx)(a.code,{children:"outline-black"})," 现在只设置轮廓颜色，而在 v2 中它们设置颜色、宽度、样式和偏移量。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5This means that ",(0,e.jsx)(a.code,{children:"outline-white"})," and ",(0,e.jsx)(a.code,{children:"outline-black"})," now only set the outline ",(0,e.jsx)(a.em,{children:"color"}),", whereas in v2 they set the color, width, style, and offset."]}),"\n",(0,e.jsxs)(a.p,{children:["如果你在项目中使用 ",(0,e.jsx)(a.code,{children:"outline-white"})," 或 ",(0,e.jsx)(a.code,{children:"outline-black"}),"，则可以通过向项目添加以下自定义 CSS 来恢复旧样式："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5If you are using ",(0,e.jsx)(a.code,{children:"outline-white"})," or ",(0,e.jsx)(a.code,{children:"outline-black"})," in your project, you can bring back the old styles by adding the following custom CSS to your project:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@layer</span> utilities</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.outline-black</span></span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token unit">px</span> dotted <span class="token color">black</span><span class="token punctuation">;</span>\n    <span class="token property">outline-offset</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token unit">px</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector"><span class="token class">.outline-white</span></span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token unit">px</span> dotted <span class="token color">white</span><span class="token punctuation">;</span>\n    <span class="token property">outline-offset</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token unit">px</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"或者，你可以使用以下类在 CSS 中更新它们的任何用法："}),"\n",(0,e.jsx)(a.p,{children:"\xa5Alternatively, you can update any usage of them in your CSS with the following classes:"}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">outline-black</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">outline-black outline-2 outline-dotted outline-offset-2</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token plain language-html unchanged">\n</span><span class="token language-html deleted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">outline-white</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">outline-white outline-2 outline-dotted outline-offset-2</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsx)("a",{id:"decoration-cloneslice"}),"\n",(0,e.jsx)(s,{level:3,id:"decoration-clone-slice",children:"decoration-clone/slice"}),"\n",(0,e.jsxs)(a.p,{children:["我们添加了 ",(0,e.jsx)(a.code,{children:"box-decoration-clone"})," 和 ",(0,e.jsx)(a.code,{children:"box-decoration-slice"})," 作为 ",(0,e.jsx)(a.code,{children:"decoration-clone"})," 和 ",(0,e.jsx)(a.code,{children:"decoration-slice"})," 的别名，以避免与所有使用 ",(0,e.jsx)(a.code,{children:"decoration-"})," 命名空间的新 ",(0,e.jsx)(a.code,{children:"text-decoration"})," 工具混淆："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5We’ve added ",(0,e.jsx)(a.code,{children:"box-decoration-clone"})," and ",(0,e.jsx)(a.code,{children:"box-decoration-slice"})," as aliases for ",(0,e.jsx)(a.code,{children:"decoration-clone"})," and ",(0,e.jsx)(a.code,{children:"decoration-slice"})," to avoid confusion with all of the new ",(0,e.jsx)(a.code,{children:"text-decoration"})," utilities that use the ",(0,e.jsx)(a.code,{children:"decoration-"})," namespace:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">decoration-clone</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">box-decoration-clone</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token plain language-html unchanged">\n</span><span class="token language-html deleted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">decoration-slice</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">box-decoration-slice</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"旧的类名将始终有效，但我们鼓励你更新为新的类名。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5The old class names will always work but you’re encouraged to update to the new ones."}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)("a",{id:"other-minor-changes"}),"\n",(0,e.jsx)(s,{level:2,id:"-11",children:"其他小改动"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Other minor changes"}),"\n",(0,e.jsx)(a.p,{children:"Tailwind CSS v3.0 需要一些其他小的重大更改，这些更改不太可能影响很多人，但已在此处捕获。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Tailwind CSS v3.0 necessitates a couple of other small breaking changes that are unlikely to affect many people, but have been captured here."}),"\n",(0,e.jsx)("a",{id:"separator-cannot-be-a-dash"}),"\n",(0,e.jsx)(s,{level:3,id:"-12",children:"分隔符不能是破折号"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Separator cannot be a dash"}),"\n",(0,e.jsxs)(a.p,{children:["破折号 (",(0,e.jsx)(a.code,{children:"-"}),") 字符不能用作 v3.0 中的自定义分隔符，因为它在引擎中引入了解析歧义。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5The dash (",(0,e.jsx)(a.code,{children:"-"}),") character cannot be used as a custom separator in v3.0 because of a parsing ambiguity it introduces in the engine."]}),"\n",(0,e.jsxs)(a.p,{children:["你必须切换到另一个角色，比如 ",(0,e.jsx)(a.code,{children:"_"}),"："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5You’ll have to switch to another character like ",(0,e.jsx)(a.code,{children:"_"})," instead:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">separator</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'-\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">  </span><span class="token literal-property property">separator</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'_\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)("a",{id:"prefix-cannot-be-a-function"}),"\n",(0,e.jsx)(s,{level:3,id:"-13",children:"前缀不能是函数"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Prefix cannot be a function"}),"\n",(0,e.jsx)(a.p,{children:"在 Tailwind CSS v3.0 之前，可以将类前缀定义为函数："}),"\n",(0,e.jsx)(a.p,{children:"\xa5Prior to Tailwind CSS v3.0, it was possible to define your class prefix as a function:"}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token function">prefix</span><span class="token punctuation">(</span><span class="token parameter">selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"这在新引擎中是不可能的，我们不得不取消对该功能的支持。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5This isn’t possible in the new engine and we’ve had to remove support for this feature."}),"\n",(0,e.jsx)(a.p,{children:"相反，使用 Tailwind 生成的每个类都相同的静态前缀："}),"\n",(0,e.jsx)(a.p,{children:"\xa5Instead, use a static prefix that is the same for every class Tailwind generates:"}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">\'tw-\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)("a",{id:"file-modifier-order-reversed"}),"\n",(0,e.jsx)(s,{level:3,id:"-14",children:"文件修饰符顺序颠倒"}),"\n",(0,e.jsx)(a.p,{children:"\xa5File modifier order reversed"}),"\n",(0,e.jsxs)(a.p,{children:["自 v3.0.0-alpha.2 引入 ",(0,e.jsx)(a.code,{children:"file"})," 修饰符以来的超级微小变化 - 如果你将其与 ",(0,e.jsx)(a.code,{children:"hover"})," 或 ",(0,e.jsx)(a.code,{children:"focus"})," 等其他修饰符组合，则需要翻转修饰符顺序："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Super minor change since v3.0.0-alpha.2 where the ",(0,e.jsx)(a.code,{children:"file"})," modifier was introduced — if you were combining it with other modifiers like ",(0,e.jsx)(a.code,{children:"hover"})," or ",(0,e.jsx)(a.code,{children:"focus"}),", you’ll need to flip the modifier order:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">input</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">file:hover:bg-blue-600 ...</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">input</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">hover:file:bg-blue-600 ...</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["在 ",(0,e.jsx)(a.a,{href:"/docs/hover-focus-and-other-states#ordering-stacked-modifiers",children:"排序堆叠修饰符"})," 文档中了解更多信息。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Learn more in the ",(0,e.jsx)(a.a,{href:"/docs/hover-focus-and-other-states#ordering-stacked-modifiers",children:"ordering stacked modifiers"})," documentation."]}),"\n",(0,e.jsx)("a",{id:"fill-and-stroke-use-color-palette"}),"\n",(0,e.jsx)(s,{level:3,id:"-15",children:"填充和描边使用调色板"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Fill and stroke use color palette"}),"\n",(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.code,{children:"fill-*"})," 和 ",(0,e.jsx)(a.code,{children:"stroke-*"})," 工具现在默认镜像你的 ",(0,e.jsx)(a.code,{children:"theme.colors"})," 密钥。如果你没有自定义调色板，这不是重大更改，但如果你自定义了调色板，那么如果你没有在自己的自定义调色板中包含 ",(0,e.jsx)(a.code,{children:"current"}),"，则 ",(0,e.jsx)(a.code,{children:"fill-current"})," 和 ",(0,e.jsx)(a.code,{children:"stroke-current"})," 类可能无法工作。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5The ",(0,e.jsx)(a.code,{children:"fill-*"})," and ",(0,e.jsx)(a.code,{children:"stroke-*"})," utilities mirror your ",(0,e.jsx)(a.code,{children:"theme.colors"})," key by default now. This isn’t a breaking change if you haven’t customized your color palette, but if you have, the ",(0,e.jsx)(a.code,{children:"fill-current"})," and ",(0,e.jsx)(a.code,{children:"stroke-current"})," classes may not work if you don’t have ",(0,e.jsx)(a.code,{children:"current"})," included in your own custom color palette."]}),"\n",(0,e.jsxs)(a.p,{children:["将 ",(0,e.jsx)(a.code,{children:"current"})," 添加到你的自定义调色板以解决此问题："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Add ",(0,e.jsx)(a.code,{children:"current"})," to your custom color palette to resolve this:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">      </span><span class="token literal-property property">current</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'currentColor\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">      </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)("a",{id:"negative-values-removed"}),"\n",(0,e.jsx)(s,{level:3,id:"-16",children:"删除负值"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Negative values removed"}),"\n",(0,e.jsxs)(a.p,{children:["像 ",(0,e.jsx)(a.code,{children:"-mx-4"})," 这样的工具中的负前缀现在是 Tailwind 中的一流功能，而不是由主题驱动的功能，因此你可以在任何支持负值的工具前面添加 ",(0,e.jsx)(a.code,{children:"-"})," 并且它会正常工作。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5The negative prefix in utilities like ",(0,e.jsx)(a.code,{children:"-mx-4"})," is a first class feature in Tailwind now, rather than something driven by your theme, so you can add ",(0,e.jsx)(a.code,{children:"-"})," in front of any utility that support negative values and it will just work."]}),"\n",(0,e.jsxs)(a.p,{children:["负值已从默认主题中删除，因此如果你使用 ",(0,e.jsx)(a.code,{children:"theme()"})," 引用它们，你将在尝试编译 CSS 时看到错误。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5The negative values have been removed from the default theme, so if you were referencing them with ",(0,e.jsx)(a.code,{children:"theme()"}),", you will see an error when trying to compile your CSS."]}),"\n",(0,e.jsxs)(a.p,{children:["使用 ",(0,e.jsx)(a.code,{children:"calc()"})," 函数更新任何受影响的代码："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5Use the ",(0,e.jsx)(a.code,{children:"calc()"})," function to update any affected code:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-css",dangerouslySetInnerHTML:{__html:'<code class="language-diff-css"><span class="token language-css unchanged"><span class="token selector class">.my-class</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-css deleted"><span class="token plain">  </span><span class="token property">top</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'top.-4\'</span><span class="token punctuation">)</span><span class="token plain"></span>\n</span><span class="token language-css inserted"><span class="token plain">  </span><span class="token property">top</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'top.4\'</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number">-1</span><span class="token punctuation">)</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code>'}}),"\n",(0,e.jsx)("a",{id:"base-layer-must-be-present"}),"\n",(0,e.jsx)(s,{level:3,id:"-17",children:"基础层必须存在"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Base layer must be present"}),"\n",(0,e.jsxs)(a.p,{children:["在 Tailwind CSS v3.0 中，必须存在 ",(0,e.jsx)(a.code,{children:"@tailwind base"})," 指令才能使转换、过滤和阴影等工具按预期工作。"]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5In Tailwind CSS v3.0, the ",(0,e.jsx)(a.code,{children:"@tailwind base"})," directive must be present for utilities like transforms, filters, and shadows to work as expected."]}),"\n",(0,e.jsxs)(a.p,{children:["如果你之前通过不包含此指令来禁用 Tailwind 的基本样式，则应将其添加回来并在 ",(0,e.jsx)(a.code,{children:"corePlugins"})," 配置中禁用 ",(0,e.jsx)(a.code,{children:"preflight"}),"："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5If you were previously disabling Tailwind’s base styles by not including this directive, you should add it back and disable ",(0,e.jsx)(a.code,{children:"preflight"})," in your ",(0,e.jsx)(a.code,{children:"corePlugins"})," configuration instead:"]}),"\n",(0,e.jsx)(p,{filename:"main.css",code:'<pre class="language-diff-css"><code class="language-diff-css"><span class="token language-css inserted"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> base</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> components</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> utilities</span><span class="token atrule punctuation">;</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">  </span><span class="token literal-property property">corePlugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">    </span><span class="token literal-property property">preflight</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"这将禁用 Tailwind 的全局基本样式，而不会影响依赖于添加自己的基本样式才能正常运行的工具。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5This will disable Tailwind’s global base styles without affecting utilities that rely on adding their own base styles to function correctly."}),"\n",(0,e.jsx)("a",{id:"screens-layer-has-been-renamed"}),"\n",(0,e.jsx)(s,{level:3,id:"-18",children:"屏幕层已重命名"}),"\n",(0,e.jsx)(a.p,{children:"\xa5Screens layer has been renamed"}),"\n",(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.code,{children:"@tailwind screens"})," 图层已重命名为 ",(0,e.jsx)(a.code,{children:"@tailwind variants"}),"："]}),"\n",(0,e.jsxs)(a.p,{children:["\xa5The ",(0,e.jsx)(a.code,{children:"@tailwind screens"})," layer has been renamed to ",(0,e.jsx)(a.code,{children:"@tailwind variants"}),":"]}),"\n",(0,e.jsx)(p,{filename:"main.css",code:'<pre class="language-diff-css"><code class="language-diff-css"><span class="token language-css unchanged"><span class="token plain"> </span><span class="token comment">/* ... */</span><span class="token plain"></span>\n</span><span class="token language-css deleted"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> screens</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token language-css inserted"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> variants</span><span class="token atrule punctuation">;</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"我认为你在办公桌前工作时被鲨鱼袭击的可能性比你受此变化影响的可能性更大。"}),"\n",(0,e.jsx)(a.p,{children:"\xa5I think you are more likely to be attacked by a shark while working at your desk than you are to be affected by this change."})]})}function r(n={}){return(0,e.jsx)(c,Object.assign({},n,{children:(0,e.jsx)(i,n)}))}function d(n,a){throw Error("Expected "+(a?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}a.default=r,r.layoutProps={Layout:o,meta:{title:"升级指南",description:"将你的 Tailwind CSS 项目从 v2 升级到 v3。"},slug:"upgrade-guide",tableOfContents:[{title:"升级包",slug:"",children:[{title:"官方插件",slug:"-1",children:[]},{title:"体验 CDN",slug:"cdn",children:[]}]},{title:"迁移到 JIT 引擎",slug:"jit",children:[{title:"配置内容源",slug:"-2",children:[]},{title:"删除夜间模式配置",slug:"-3",children:[]},{title:"删除变体配置",slug:"-4",children:[]},{title:"使用 @layer 替换 @variants",slug:"layer-variants",children:[]},{title:"自动转换和过滤",slug:"-5",children:[]},{title:"新的透明度修饰符语法",slug:"-6",children:[]}]},{title:"调色板变化",slug:"-7",children:[{title:"删除了颜色别名",slug:"-8",children:[]},{title:"重命名灰度",slug:"-9",children:[]}]},{title:"类名称变更",slug:"-10",children:[{title:"overflow-clip/ellipsis",slug:"overflow-clip-ellipsis",children:[]},{title:"flex-grow/shrink",slug:"flex-grow-shrink",children:[]},{title:"outline-black/white",slug:"outline-black-white",children:[]},{title:"decoration-clone/slice",slug:"decoration-clone-slice",children:[]}]},{title:"其他小改动",slug:"-11",children:[{title:"分隔符不能是破折号",slug:"-12",children:[]},{title:"前缀不能是函数",slug:"-13",children:[]},{title:"文件修饰符顺序颠倒",slug:"-14",children:[]},{title:"填充和描边使用调色板",slug:"-15",children:[]},{title:"删除负值",slug:"-16",children:[]},{title:"基础层必须存在",slug:"-17",children:[]},{title:"屏幕层已重命名",slug:"-18",children:[]}]}]}},72788:function(n,a,s){"use strict";s.d(a,{L:function(){return o}});var e=s(85893),t=s(97903),p=s(77929),l=s(87308);function o(n){return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(p.Dx,{children:n.layoutProps.meta.metaTitle||n.layoutProps.meta.title}),(0,e.jsx)(t.C,{nav:l.u,...n})]})}o.nav=l.u},11151:function(n,a,s){"use strict";s.d(a,{Zo:function(){return o},ah:function(){return p}});var e=s(67294);let t=e.createContext({});function p(n){let a=e.useContext(t);return e.useMemo(()=>"function"==typeof n?n(a):{...a,...n},[a,n])}let l={};function o({components:n,children:a,disableParentContext:s}){let o;return o=s?"function"==typeof n?n({}):n||l:p(n),e.createElement(t.Provider,{value:o},a)}}},function(n){n.O(0,[3430,7996,9495,224,7308,9774,2888,179],function(){return n(n.s=97813)}),_N_E=n.O()}]);