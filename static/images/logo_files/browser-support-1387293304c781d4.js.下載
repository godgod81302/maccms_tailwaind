(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5410],{13783:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/browser-support",function(){return s(84357)}])},84357:function(e,n,s){"use strict";s.r(n);var t=s(85893),a=s(11151),o=s(72788),r=s(36336);let i=o.L,l=r.X_;function p(e){let n=Object.assign({p:"p",code:"code",a:"a",hr:"hr",pre:"pre"},(0,a.ah)(),e.components),{Heading:s}=n;return s||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Heading",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"一般来说，Tailwind CSS v3.0 是为最新稳定版本的 Chrome、Firefox、Edge 和 Safari 设计和测试的。它不支持任何版本的 IE，包括 IE 11。"}),"\n",(0,t.jsx)(n.p,{children:"\xa5In general, Tailwind CSS v3.0 is designed for and tested on the latest stable versions of Chrome, Firefox, Edge, and Safari. It does not support any version of IE, including IE 11."}),"\n",(0,t.jsxs)(n.p,{children:["虽然 Tailwind CSS 中的大部分功能都适用于所有现代浏览器，但 Tailwind 还包括一些尚未被所有浏览器支持的前沿功能的 API，例如 ",(0,t.jsx)(n.code,{children:":focus-visible"})," 伪类和 ",(0,t.jsx)(n.code,{children:"backdrop-filter"})," 工具。"]}),"\n",(0,t.jsxs)(n.p,{children:["\xa5While most of the features in Tailwind CSS will work in all modern browsers, Tailwind also includes APIs for several bleeding-edge features that aren’t yet supported by all browsers, for example the ",(0,t.jsx)(n.code,{children:":focus-visible"})," pseudo-class and ",(0,t.jsx)(n.code,{children:"backdrop-filter"})," utilities."]}),"\n",(0,t.jsx)(n.p,{children:"由于 Tailwind 是一个如此底层的框架，如果你不能使用这些功能，则很容易通过不使用不受支持的工具或修饰符来避免这些功能，就像你不会在 CSS 中使用这些 CSS 功能一样 ."}),"\n",(0,t.jsx)(n.p,{children:"\xa5Since Tailwind is such a low-level framework, it’s easy to avoid these features if you can’t use them by simply not using the utility or modifier that’s not supported, much like how you just wouldn’t use those CSS features in your CSS."}),"\n",(0,t.jsxs)(n.p,{children:["当你不确定是否支持不熟悉的 CSS 功能时，",(0,t.jsx)(n.a,{href:"https://caniuse.com/?search=focus-visible",children:"我可以用吗"})," 数据库是一个很好的资源。"]}),"\n",(0,t.jsxs)(n.p,{children:["\xa5The ",(0,t.jsx)(n.a,{href:"https://caniuse.com/?search=focus-visible",children:"Can I Use"})," database is a great resource when you’re unsure about the support for an unfamiliar CSS feature."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("a",{id:"vendor-prefixes"}),"\n",(0,t.jsx)(s,{level:2,id:"",children:"浏览器前缀"}),"\n",(0,t.jsx)(n.p,{children:"\xa5Vendor Prefixes"}),"\n",(0,t.jsxs)(n.p,{children:["许多 CSS 属性需要浏览器前缀才能被浏览器理解，例如 ",(0,t.jsx)(n.code,{children:"background-clip: text"})," 需要 ",(0,t.jsx)(n.code,{children:"-webkit"})," 前缀才能在大多数浏览器中工作："]}),"\n",(0,t.jsxs)(n.p,{children:["\xa5Many CSS properties require vendor prefixes to be understood by browsers, for example ",(0,t.jsx)(n.code,{children:"background-clip: text"})," needs the ",(0,t.jsx)(n.code,{children:"-webkit"})," prefix to work in most browsers:"]}),"\n",(0,t.jsx)(n.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.bg-clip-text</span></span> <span class="token punctuation">{</span>\n  <span class="token property">-webkit-background-clip</span><span class="token punctuation">:</span> text<span class="token punctuation">;</span>\n  <span class="token property">background-clip</span><span class="token punctuation">:</span> text<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,t.jsx)(n.p,{children:"如果你使用的是 Tailwind CLI 工具，则会自动添加像这样的浏览器前缀。"}),"\n",(0,t.jsx)(n.p,{children:"\xa5If you’re using the Tailwind CLI tool, vendor prefixes like this will be added automatically."}),"\n",(0,t.jsxs)(n.p,{children:["如果没有，我们建议你使用 ",(0,t.jsx)(n.a,{href:"https://github.com/postcss/autoprefixer",children:"Autoprefixer"}),"，这是一个 PostCSS 插件，它会根据你告诉它需要支持的浏览器自动添加任何必要的浏览器前缀。"]}),"\n",(0,t.jsxs)(n.p,{children:["\xa5If not, we recommend that you use ",(0,t.jsx)(n.a,{href:"https://github.com/postcss/autoprefixer",children:"Autoprefixer"}),", which is a PostCSS plugin that automatically adds any necessary vendor prefixes based on the browsers you tell it you need to support."]}),"\n",(0,t.jsx)(n.p,{children:"要使用它，请通过 npm 安装它："}),"\n",(0,t.jsx)(n.p,{children:"\xa5To use it, install it via npm:"}),"\n",(0,t.jsx)(n.pre,{className:"language-shell",dangerouslySetInnerHTML:{__html:'<code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> autoprefixer</code>'}}),"\n",(0,t.jsx)(n.p,{children:"然后将它添加到 PostCSS 配置中插件列表的最后："}),"\n",(0,t.jsx)(n.p,{children:"\xa5Then add it to the very end of your plugin list in your PostCSS configuration:"}),"\n",(0,t.jsx)(n.pre,{className:"language-js",dangerouslySetInnerHTML:{__html:'<code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">tailwindcss</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">autoprefixer</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,t.jsxs)(n.p,{children:["要了解有关指定需要支持哪些浏览器的更多信息，请查看 ",(0,t.jsx)(n.a,{href:"https://github.com/browserslist/browserslist",children:"浏览器列表"}),"，这是在前端工具中定义目标浏览器的标准方法。"]}),"\n",(0,t.jsxs)(n.p,{children:["\xa5To learn more about specifying which browsers you need to support, check out ",(0,t.jsx)(n.a,{href:"https://github.com/browserslist/browserslist",children:"Browserslist"})," which is the standard way to define target browsers in front-end tooling."]})]})}function c(e={}){return(0,t.jsx)(l,Object.assign({},e,{children:(0,t.jsx)(p,e)}))}n.default=c,c.layoutProps={Layout:i,meta:{title:"浏览器支持",description:"了解 Tailwind 支持哪些浏览器以及如何管理浏览器前缀。"},slug:"browser-support",tableOfContents:[{title:"浏览器前缀",slug:"",children:[]}]}},72788:function(e,n,s){"use strict";s.d(n,{L:function(){return i}});var t=s(85893),a=s(97903),o=s(77929),r=s(87308);function i(e){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.Dx,{children:e.layoutProps.meta.metaTitle||e.layoutProps.meta.title}),(0,t.jsx)(a.C,{nav:r.u,...e})]})}i.nav=r.u},11151:function(e,n,s){"use strict";s.d(n,{Zo:function(){return i},ah:function(){return o}});var t=s(67294);let a=t.createContext({});function o(e){let n=t.useContext(a);return t.useMemo(()=>"function"==typeof e?e(n):{...n,...e},[n,e])}let r={};function i({components:e,children:n,disableParentContext:s}){let i;return i=s?"function"==typeof e?e({}):e||r:o(e),t.createElement(a.Provider,{value:i},n)}}},function(e){e.O(0,[3430,7996,9495,224,7308,9774,2888,179],function(){return e(e.s=13783)}),_N_E=e.O()}]);